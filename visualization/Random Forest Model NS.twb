<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Forecast Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2023-01-01#'>
        <calculation class='tableau' formula='#2023-01-01#' />
      </column>
      <column caption='Forecast End Date' datatype='date' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='#2024-01-30#'>
        <calculation class='tableau' formula='#2024-01-30#' />
      </column>
      <column caption='Periods to forecast' datatype='integer' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
      </column>
    </datasource>
    <datasource caption='modelingdata' inline='true' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sampledata2' name='textscan.0wpi3y71tlyd1m14e7rhb1kn02z9'>
            <connection class='textscan' directory='C:/Users/nehas/Documents/GT 2023/CSE 6242 DVA/Project' filename='sampledata2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0wpi3y71tlyd1m14e7rhb1kn02z9' name='sampledata2.csv' table='[sampledata2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='rideable_type' ordinal='0' />
            <column datatype='integer' name='member_casual' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='day_of_week' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='string' name='season' ordinal='5' />
            <column datatype='integer' name='trip_duration_mins' ordinal='6' />
            <column datatype='integer' name='hour' ordinal='7' />
            <column datatype='integer' name='trips' ordinal='8' />
            <column datatype='integer' name='day_of_month' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0wpi3y71tlyd1m14e7rhb1kn02z9' name='sampledata2.csv' table='[sampledata2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='rideable_type' ordinal='0' />
            <column datatype='integer' name='member_casual' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='day_of_week' ordinal='3' />
            <column datatype='string' name='month' ordinal='4' />
            <column datatype='string' name='season' ordinal='5' />
            <column datatype='integer' name='trip_duration_mins' ordinal='6' />
            <column datatype='integer' name='hour' ordinal='7' />
            <column datatype='integer' name='trips' ordinal='8' />
            <column datatype='integer' name='day_of_month' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rideable_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rideable_type]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>rideable_type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>member_casual</remote-name>
            <remote-type>20</remote-type>
            <local-name>[member_casual]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>member_casual</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_week</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day_of_week]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>day_of_week</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_duration_mins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_duration_mins]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>trip_duration_mins</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trips]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>trips</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day_of_month]</local-name>
            <parent-name>[sampledata2.csv]</parent-name>
            <remote-alias>day_of_month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]&quot;' value='Actual Trips' />
          <alias key='&quot;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:4]&quot;' value='Predicted Trips' />
        </aliases>
      </column>
      <column caption='RF Predicted Trips' datatype='real' name='[Calculation_1498009827266146304]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=df,ntree=200, mtry=6);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=df[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Day' datatype='integer' name='[Calculation_1498009827275894786]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DAY([date])' />
      </column>
      <column caption='month' datatype='integer' name='[Calculation_1498009827330859018]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [month]&#13;&#10;  WHEN &quot;January&quot; THEN 1&#13;&#10;  WHEN &quot;February&quot; THEN 2&#13;&#10;  WHEN &quot;March&quot; THEN 3&#13;&#10;  WHEN &quot;April&quot; THEN 4&#13;&#10;  WHEN &quot;May&quot; THEN 5&#13;&#10;  WHEN &quot;June&quot; THEN 6&#13;&#10;  WHEN &quot;July&quot; THEN 7&#13;&#10;  WHEN &quot;August&quot; THEN 8&#13;&#10;  WHEN &quot;September&quot; THEN 9&#13;&#10;  WHEN &quot;October&quot; THEN 10&#13;&#10;  WHEN &quot;November&quot; THEN 11&#13;&#10;  WHEN &quot;December&quot; THEN 12&#13;&#10;END' />
      </column>
      <column caption='weekday' datatype='integer' name='[Calculation_1498009827334266891]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [day_of_week]&#13;&#10;  WHEN &quot;Sunday&quot; THEN 1&#13;&#10;  WHEN &quot;Monday&quot; THEN 2&#13;&#10;  WHEN &quot;Tuesday&quot; THEN 3&#13;&#10;  WHEN &quot;Wednesday&quot; THEN 4&#13;&#10;  WHEN &quot;Thursday&quot; THEN 5&#13;&#10;  WHEN &quot;Friday&quot; THEN 6&#13;&#10;  WHEN &quot;Saturday&quot; THEN 7&#13;&#10;END' />
      </column>
      <column caption='season' datatype='integer' name='[Calculation_1498009827334455308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [season]&#13;&#10;  WHEN &quot;Spring&quot; THEN 1&#13;&#10;  WHEN &quot;Summer&quot; THEN 2&#13;&#10;  WHEN &quot;Fall&quot; THEN 3&#13;&#10;  WHEN &quot;Winter&quot; THEN 4&#13;&#10;END' />
      </column>
      <column caption='MemberType' datatype='integer' name='[Calculation_1498009827336028174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [member_casual]&#13;&#10;  WHEN 0 THEN 1&#13;&#10;  WHEN 1 THEN 2&#13;&#10;END' />
      </column>
      <column caption='RideableType' datatype='integer' name='[Calculation_1498009827336597520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [rideable_type]&#13;&#10;  WHEN &quot;classic_bike&quot; THEN 1&#13;&#10;  WHEN &quot;electric_bike&quot; THEN 2&#13;&#10;END' />
      </column>
      <column caption='RF Test' datatype='real' name='[Calculation_1635651091467378688]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;training_indices &lt;- sample(1:nrow(df), 0.7 * nrow(df));&#13;&#10;train &lt;- df[training_indices, ];&#13;&#10;test &lt;- df[-training_indices, ];&#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=train,ntree=100);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=test[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Reset Label' datatype='string' name='[Calculation_1635651091523465219]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Reset Filters&quot;' />
      </column>
      <column caption='Predicted Trips ' datatype='real' name='[Calculation_614178400068853760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;  library(forecast);&#13;&#10;  ts_data &lt;- ts(.arg1,start=c(2023,1),frequency=365);&#13;&#10;  diff_series &lt;- diff(ts_data, differences = 1);&#13;&#10;  arima_model &lt;- auto.arima(diff_series);&#13;&#10;  forecasts &lt;- forecast(arima_model, h=31);&#13;&#10;forecast_output &lt;- c(rep(NA, length(ts_data) - 1 - 31), forecasts$mean);&#13;&#10;forecast_output &lt;- forecast_output[1:length(.arg1)];&#13;&#10;forecast_output;&#13;&#10;&quot;, SUM([trips]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Predicted Trips 2' datatype='real' name='[Calculation_614178400117719044]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(forecast);&#13;&#10;ts_data2 &lt;- ts(.arg1,start=c(2023,1),frequency=365);&#13;&#10;arima_model2 &lt;- auto.arima(ts_data2);&#13;&#10;forecasts2 &lt;- forecast(arima_model2, h=30);&#13;&#10;forecast_output2 &lt;- c(rep(NA, length(ts_data2)-30), forecasts2$mean);&#13;&#10;forecast_output2 &lt;- forecast_output2[1:length(.arg1)];&#13;&#10;forecast_output2;&#13;&#10;&quot;, SUM([trips]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[hour]' />
        <aliases>
          <alias key='0' value='12AM' />
          <alias key='1' value='1AM' />
          <alias key='2' value='2AM' />
          <alias key='3' value='3AM' />
          <alias key='4' value='4AM' />
          <alias key='5' value='5AM' />
          <alias key='6' value='6AM' />
          <alias key='7' value='7AM' />
          <alias key='8' value='8AM' />
          <alias key='9' value='9AM' />
          <alias key='10' value='10AM' />
          <alias key='11' value='11AM' />
          <alias key='12' value='12PM' />
          <alias key='13' value='1PM' />
          <alias key='14' value='2PM' />
          <alias key='15' value='3PM' />
          <alias key='16' value='4PM' />
          <alias key='17' value='5PM' />
          <alias key='18' value='6PM' />
          <alias key='19' value='7PM' />
          <alias key='20' value='8PM' />
          <alias key='21' value='9PM' />
          <alias key='22' value='10PM' />
          <alias key='23' value='11PM' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Trip Duration (Mins)' datatype='integer' name='[Trip Duration Mins (copy)_1635651091494989825]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[trip_duration_mins]' />
        <aliases>
          <alias key='2' value='2 min' />
          <alias key='3' value='3 min' />
          <alias key='4' value='4 min ' />
          <alias key='5' value='5 min' />
          <alias key='6' value='6 min' />
          <alias key='7' value='7 min' />
          <alias key='8' value='8 min' />
          <alias key='9' value='9 min' />
          <alias key='10' value='10 min' />
          <alias key='11' value='11 min' />
          <alias key='12' value='12 min' />
          <alias key='13' value='13 min' />
          <alias key='14' value='14 min' />
          <alias key='15' value='15 min' />
          <alias key='16' value='16 min' />
          <alias key='17' value='17 min' />
          <alias key='18' value='18 min ' />
          <alias key='19' value='19 min' />
          <alias key='20' value='20 min' />
          <alias key='21' value='21 min' />
          <alias key='22' value='22 min' />
          <alias key='23' value='23 min' />
          <alias key='24' value='24 min' />
          <alias key='25' value='25 min' />
          <alias key='26' value='26 min' />
          <alias key='27' value='27 min' />
          <alias key='28' value='28 min' />
          <alias key='29' value='29 min' />
          <alias key='30' value='30 min' />
          <alias key='31' value='31 min' />
          <alias key='32' value='32 min' />
          <alias key='33' value='33 min' />
          <alias key='34' value='34 min' />
          <alias key='35' value='35 min' />
          <alias key='36' value='36 min' />
          <alias key='37' value='37 min' />
          <alias key='38' value='38 min' />
          <alias key='39' value='39 min' />
          <alias key='40' value='40 min' />
          <alias key='41' value='41 min' />
          <alias key='42' value='42 min' />
          <alias key='43' value='43 min' />
          <alias key='44' value='44 min' />
          <alias key='45' value='45 min' />
          <alias key='46' value='46 min' />
          <alias key='47' value='47 min' />
          <alias key='48' value='48 min' />
          <alias key='49' value='49 min' />
          <alias key='50' value='50 min' />
          <alias key='51' value='51 min' />
          <alias key='52' value='52 min' />
          <alias key='53' value='53 min' />
          <alias key='54' value='54 min' />
          <alias key='55' value='55 min' />
          <alias key='56' value='56 min' />
          <alias key='57' value='57 min' />
          <alias key='58' value='58 min' />
          <alias key='59' value='59 min' />
          <alias key='60' value='60 min' />
          <alias key='61' value='61 min' />
          <alias key='62' value='62 min' />
          <alias key='63' value='63 min' />
          <alias key='64' value='64 min' />
          <alias key='65' value='65 min' />
          <alias key='66' value='66 min' />
          <alias key='67' value='67 min' />
          <alias key='68' value='68 min ' />
          <alias key='69' value='69 min' />
          <alias key='70' value='70 min' />
          <alias key='71' value='71 min' />
          <alias key='72' value='72 min' />
          <alias key='73' value='73 min' />
          <alias key='74' value='74 min' />
          <alias key='75' value='75 min' />
          <alias key='76' value=' 76 min' />
          <alias key='77' value='77 min' />
          <alias key='78' value='78 min' />
          <alias key='79' value='79 min' />
          <alias key='80' value='80 min' />
          <alias key='81' value='81 min' />
          <alias key='82' value='82 min' />
          <alias key='83' value='83 min' />
          <alias key='84' value='84 min' />
          <alias key='85' value='85 min' />
          <alias key='86' value='86 min' />
          <alias key='87' value='87 min' />
          <alias key='88' value='88 min' />
          <alias key='89' value='89 min' />
          <alias key='90' value='90 min' />
          <alias key='91' value='91 min' />
          <alias key='92' value='92 min' />
          <alias key='93' value='93 min' />
          <alias key='94' value='94 min' />
          <alias key='95' value='95 min' />
          <alias key='96' value='96 min' />
          <alias key='97' value='97 min' />
          <alias key='98' value='98 min' />
          <alias key='99' value='99 min' />
          <alias key='100' value='100 min' />
          <alias key='101' value='101 min' />
          <alias key='102' value='102 min' />
          <alias key='103' value='103 min' />
          <alias key='104' value='104 min' />
          <alias key='105' value='105 min' />
          <alias key='106' value='106 min' />
          <alias key='107' value='107 min' />
          <alias key='108' value='108 min' />
          <alias key='109' value='109 min' />
          <alias key='110' value='110 min' />
          <alias key='111' value='111 min' />
          <alias key='112' value='112 min' />
          <alias key='113' value='113 min' />
          <alias key='114' value='114 min' />
          <alias key='115' value='115 min' />
          <alias key='116' value='116 min' />
          <alias key='117' value='117 min' />
          <alias key='118' value='118 min' />
          <alias key='119' value='119 min' />
          <alias key='120' value='120 min' />
          <alias key='121' value='121 min' />
          <alias key='122' value='122 min' />
          <alias key='123' value='123 min' />
          <alias key='124' value='124 min' />
          <alias key='125' value='125 min' />
          <alias key='126' value='126 min' />
          <alias key='127' value='127 min' />
          <alias key='128' value='128 min' />
          <alias key='129' value='129 min' />
          <alias key='130' value='130 min' />
          <alias key='131' value='131 min' />
          <alias key='132' value='132 min' />
          <alias key='133' value='133 min' />
          <alias key='134' value='134 min' />
          <alias key='135' value='135 min' />
          <alias key='136' value='136 min' />
          <alias key='137' value='137 min' />
          <alias key='138' value='138 min' />
          <alias key='139' value='139 min' />
          <alias key='140' value='140 min' />
          <alias key='141' value='141 min' />
          <alias key='142' value='142 min' />
          <alias key='143' value='143 min' />
          <alias key='144' value='144 min' />
          <alias key='145' value='145 min' />
          <alias key='146' value='146 min' />
          <alias key='147' value='147 min' />
          <alias key='148' value='148 min' />
          <alias key='149' value='149 min' />
          <alias key='150' value='150 min' />
          <alias key='151' value='151 min' />
          <alias key='152' value='152 min' />
          <alias key='153' value='153 min' />
          <alias key='154' value='154 min' />
          <alias key='155' value='155 min' />
          <alias key='156' value='156 min' />
          <alias key='157' value='157 min' />
          <alias key='158' value='158 min' />
          <alias key='159' value='159 min' />
          <alias key='160' value='160 min' />
          <alias key='161' value='161 min ' />
          <alias key='162' value='162 min' />
          <alias key='163' value='163 min' />
          <alias key='164' value='164 min' />
          <alias key='165' value='165 min' />
          <alias key='166' value='166 min' />
          <alias key='167' value='167 min' />
          <alias key='168' value='168 min' />
          <alias key='169' value='169 min' />
          <alias key='170' value='170 min' />
          <alias key='171' value='171 min' />
          <alias key='172' value='172 min' />
          <alias key='173' value='173 min' />
          <alias key='174' value='174 min' />
          <alias key='175' value='175 min' />
          <alias key='176' value='176 min' />
          <alias key='177' value='177 min' />
          <alias key='178' value='178 min' />
          <alias key='179' value='179 min' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='sampledata2.csv' datatype='table' name='[__tableau_internal_object_id__].[sampledata2.csv_56670ED87F20408C92992C48C7E4E954]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day Of Month' datatype='integer' name='[day_of_month]' role='dimension' type='quantitative' />
      <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
      <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Casual' />
          <alias key='1' value='Member' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
          <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
        </aliases>
      </column>
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Trip Duration Mins' datatype='integer' name='[trip_duration_mins]' role='measure' type='quantitative' />
      <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1498009827334266891]' derivation='None' name='[none:Calculation_1498009827334266891:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
      <column-instance column='[hour]' derivation='None' name='[none:hour:ok]' pivot='key' type='ordinal' />
      <column-instance column='[trips]' derivation='Sum' name='[sum:trips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]' ordering-type='Field' />
      </column-instance>
      <group caption='Action (Date,Day Of Week,Hour,Member or Casual,Month,Rideable Type,Season)' hidden='true' name='[Action (Date,Day Of Week,Hour,Member or Casual,Month,Rideable Type,Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[day_of_week]' />
          <groupfilter function='level-members' level='[none:hour:ok]' />
          <groupfilter function='level-members' level='[member_casual]' />
          <groupfilter function='level-members' level='[month]' />
          <groupfilter function='level-members' level='[rideable_type]' />
          <groupfilter function='level-members' level='[season]' />
        </groupfilter>
      </group>
      <group caption='Action (Hour2,Date,Day Of Week,Member or Casual,Month,Rideable Type,Season)' hidden='true' name='[Action (Hour2,Date,Day Of Week,Member or Casual,Month,Rideable Type,Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Hour (copy)_1498009827268812801]' />
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[day_of_week]' />
          <groupfilter function='level-members' level='[member_casual]' />
          <groupfilter function='level-members' level='[month]' />
          <groupfilter function='level-members' level='[rideable_type]' />
          <groupfilter function='level-members' level='[season]' />
        </groupfilter>
      </group>
      <group caption='Action (Season)' hidden='true' name='[Action (Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[season]' />
        </groupfilter>
      </group>
      <group caption='Action (weekday,Hour,Member or Casual,Month,Rideable Type,Season)' hidden='true' name='[Action (weekday,Hour,Member or Casual,Month,Rideable Type,Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1498009827334266891:ok]' />
          <groupfilter function='level-members' level='[none:hour:ok]' />
          <groupfilter function='level-members' level='[member_casual]' />
          <groupfilter function='level-members' level='[month]' />
          <groupfilter function='level-members' level='[rideable_type]' />
          <groupfilter function='level-members' level='[season]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.885145' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.114855' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Hour (copy)_1498009827268812801:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='sf_default' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:1]&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827321864200:qk:2]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:4]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sampledata2.csv' id='sampledata2.csv_56670ED87F20408C92992C48C7E4E954'>
            <properties context=''>
              <relation connection='textscan.0wpi3y71tlyd1m14e7rhb1kn02z9' name='sampledata2.csv' table='[sampledata2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='rideable_type' ordinal='0' />
                  <column datatype='integer' name='member_casual' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='day_of_week' ordinal='3' />
                  <column datatype='string' name='month' ordinal='4' />
                  <column datatype='string' name='season' ordinal='5' />
                  <column datatype='integer' name='trip_duration_mins' ordinal='6' />
                  <column datatype='integer' name='hour' ordinal='7' />
                  <column datatype='integer' name='trips' ordinal='8' />
                  <column datatype='integer' name='day_of_month' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Resetting Filters' name='[Action1_F93986A670174DF894EED29AD9D45A19]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard RF' type='sheet' worksheet='Reset Filters' />
      <link caption='Resetting Filters' delimiter=',' escape='\' expression='tsl:Dashboard%20RF?%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5BHour%20%28copy%29_1498009827268812801%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[Hour (copy)_1498009827268812801]~na&gt;&amp;%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5Bdate%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[date]~na&gt;&amp;%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5Bday_of_week%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[day_of_week]~na&gt;&amp;%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5Bmember_casual%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[member_casual]~na&gt;&amp;%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5Bmonth%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[month]~na&gt;&amp;%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5Brideable_type%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[rideable_type]~na&gt;&amp;%5Bfederated.0w4eepb0v5ppb9126ghmz0ae620n%5D.%5Bseason%5D~s0=&lt;[federated.0w4eepb0v5ppb9126ghmz0ae620n].[season]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Reset Filters,Trips' />
        <param name='target' value='Dashboard RF' />
      </command>
    </action>
    <datasources>
      <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
    </datasources>
    <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
      <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[hour]' />
        <aliases>
          <alias key='0' value='12AM' />
          <alias key='1' value='1AM' />
          <alias key='2' value='2AM' />
          <alias key='3' value='3AM' />
          <alias key='4' value='4AM' />
          <alias key='5' value='5AM' />
          <alias key='6' value='6AM' />
          <alias key='7' value='7AM' />
          <alias key='8' value='8AM' />
          <alias key='9' value='9AM' />
          <alias key='10' value='10AM' />
          <alias key='11' value='11AM' />
          <alias key='12' value='12PM' />
          <alias key='13' value='1PM' />
          <alias key='14' value='2PM' />
          <alias key='15' value='3PM' />
          <alias key='16' value='4PM' />
          <alias key='17' value='5PM' />
          <alias key='18' value='6PM' />
          <alias key='19' value='7PM' />
          <alias key='20' value='8PM' />
          <alias key='21' value='9PM' />
          <alias key='22' value='10PM' />
          <alias key='23' value='11PM' />
        </aliases>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
      <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Casual' />
          <alias key='1' value='Member' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
          <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
        </aliases>
      </column>
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='RF Reg Model Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#321b79' fontsize='14'>Actual vs. Predicted Trips by Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='RF Predicted Trips' datatype='real' name='[Calculation_1498009827266146304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=df,ntree=200, mtry=6);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=df[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Day' datatype='integer' name='[Calculation_1498009827275894786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DAY([date])' />
            </column>
            <column caption='month' datatype='integer' name='[Calculation_1498009827330859018]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [month]&#13;&#10;  WHEN &quot;January&quot; THEN 1&#13;&#10;  WHEN &quot;February&quot; THEN 2&#13;&#10;  WHEN &quot;March&quot; THEN 3&#13;&#10;  WHEN &quot;April&quot; THEN 4&#13;&#10;  WHEN &quot;May&quot; THEN 5&#13;&#10;  WHEN &quot;June&quot; THEN 6&#13;&#10;  WHEN &quot;July&quot; THEN 7&#13;&#10;  WHEN &quot;August&quot; THEN 8&#13;&#10;  WHEN &quot;September&quot; THEN 9&#13;&#10;  WHEN &quot;October&quot; THEN 10&#13;&#10;  WHEN &quot;November&quot; THEN 11&#13;&#10;  WHEN &quot;December&quot; THEN 12&#13;&#10;END' />
            </column>
            <column caption='weekday' datatype='integer' name='[Calculation_1498009827334266891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [day_of_week]&#13;&#10;  WHEN &quot;Sunday&quot; THEN 1&#13;&#10;  WHEN &quot;Monday&quot; THEN 2&#13;&#10;  WHEN &quot;Tuesday&quot; THEN 3&#13;&#10;  WHEN &quot;Wednesday&quot; THEN 4&#13;&#10;  WHEN &quot;Thursday&quot; THEN 5&#13;&#10;  WHEN &quot;Friday&quot; THEN 6&#13;&#10;  WHEN &quot;Saturday&quot; THEN 7&#13;&#10;END' />
            </column>
            <column caption='season' datatype='integer' name='[Calculation_1498009827334455308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [season]&#13;&#10;  WHEN &quot;Spring&quot; THEN 1&#13;&#10;  WHEN &quot;Summer&quot; THEN 2&#13;&#10;  WHEN &quot;Fall&quot; THEN 3&#13;&#10;  WHEN &quot;Winter&quot; THEN 4&#13;&#10;END' />
            </column>
            <column caption='MemberType' datatype='integer' name='[Calculation_1498009827336028174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [member_casual]&#13;&#10;  WHEN 0 THEN 1&#13;&#10;  WHEN 1 THEN 2&#13;&#10;END' />
            </column>
            <column caption='RideableType' datatype='integer' name='[Calculation_1498009827336597520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [rideable_type]&#13;&#10;  WHEN &quot;classic_bike&quot; THEN 1&#13;&#10;  WHEN &quot;electric_bike&quot; THEN 2&#13;&#10;END' />
            </column>
            <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[hour]' />
              <aliases>
                <alias key='0' value='12AM' />
                <alias key='1' value='1AM' />
                <alias key='2' value='2AM' />
                <alias key='3' value='3AM' />
                <alias key='4' value='4AM' />
                <alias key='5' value='5AM' />
                <alias key='6' value='6AM' />
                <alias key='7' value='7AM' />
                <alias key='8' value='8AM' />
                <alias key='9' value='9AM' />
                <alias key='10' value='10AM' />
                <alias key='11' value='11AM' />
                <alias key='12' value='12PM' />
                <alias key='13' value='1PM' />
                <alias key='14' value='2PM' />
                <alias key='15' value='3PM' />
                <alias key='16' value='4PM' />
                <alias key='17' value='5PM' />
                <alias key='18' value='6PM' />
                <alias key='19' value='7PM' />
                <alias key='20' value='8PM' />
                <alias key='21' value='9PM' />
                <alias key='22' value='10PM' />
                <alias key='23' value='11PM' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Casual' />
                <alias key='1' value='Member' />
              </aliases>
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
                <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
              </aliases>
            </column>
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[trips]' derivation='Sum' name='[sum:trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column caption='Trip Duration Mins' datatype='integer' name='[trip_duration_mins]' role='measure' type='quantitative' />
            <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Hour (copy)_1498009827268812801:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:day_of_week:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:member_casual:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:rideable_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:4]' field-type='quantitative' fold='true' max='6577.8354669815471' min='104.19891041578512' range-type='fixed' scope='cols' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]' field-type='quantitative' max='6578' min='104' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:4]' scope='cols' value='Predicted Trips' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' value='Hour'>
              <formatted-text>
                <run>Hour</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' value='Weekday'>
              <formatted-text>
                <run>Weekday</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]</rows>
        <cols>([federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk] + [federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:4])</cols>
      </table>
      <simple-id uuid='{FBADA456-3C21-4DFE-AD41-A8BF7176B829}' />
    </worksheet>
    <worksheet name='RF Reg Model Line'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='RF Predicted Trips' datatype='real' name='[Calculation_1498009827266146304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=df,ntree=200, mtry=6);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=df[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Day' datatype='integer' name='[Calculation_1498009827275894786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DAY([date])' />
            </column>
            <column caption='month' datatype='integer' name='[Calculation_1498009827330859018]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [month]&#13;&#10;  WHEN &quot;January&quot; THEN 1&#13;&#10;  WHEN &quot;February&quot; THEN 2&#13;&#10;  WHEN &quot;March&quot; THEN 3&#13;&#10;  WHEN &quot;April&quot; THEN 4&#13;&#10;  WHEN &quot;May&quot; THEN 5&#13;&#10;  WHEN &quot;June&quot; THEN 6&#13;&#10;  WHEN &quot;July&quot; THEN 7&#13;&#10;  WHEN &quot;August&quot; THEN 8&#13;&#10;  WHEN &quot;September&quot; THEN 9&#13;&#10;  WHEN &quot;October&quot; THEN 10&#13;&#10;  WHEN &quot;November&quot; THEN 11&#13;&#10;  WHEN &quot;December&quot; THEN 12&#13;&#10;END' />
            </column>
            <column caption='weekday' datatype='integer' name='[Calculation_1498009827334266891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [day_of_week]&#13;&#10;  WHEN &quot;Sunday&quot; THEN 1&#13;&#10;  WHEN &quot;Monday&quot; THEN 2&#13;&#10;  WHEN &quot;Tuesday&quot; THEN 3&#13;&#10;  WHEN &quot;Wednesday&quot; THEN 4&#13;&#10;  WHEN &quot;Thursday&quot; THEN 5&#13;&#10;  WHEN &quot;Friday&quot; THEN 6&#13;&#10;  WHEN &quot;Saturday&quot; THEN 7&#13;&#10;END' />
            </column>
            <column caption='season' datatype='integer' name='[Calculation_1498009827334455308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [season]&#13;&#10;  WHEN &quot;Spring&quot; THEN 1&#13;&#10;  WHEN &quot;Summer&quot; THEN 2&#13;&#10;  WHEN &quot;Fall&quot; THEN 3&#13;&#10;  WHEN &quot;Winter&quot; THEN 4&#13;&#10;END' />
            </column>
            <column caption='MemberType' datatype='integer' name='[Calculation_1498009827336028174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [member_casual]&#13;&#10;  WHEN 0 THEN 1&#13;&#10;  WHEN 1 THEN 2&#13;&#10;END' />
            </column>
            <column caption='RideableType' datatype='integer' name='[Calculation_1498009827336597520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [rideable_type]&#13;&#10;  WHEN &quot;classic_bike&quot; THEN 1&#13;&#10;  WHEN &quot;electric_bike&quot; THEN 2&#13;&#10;END' />
            </column>
            <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[hour]' />
              <aliases>
                <alias key='0' value='12AM' />
                <alias key='1' value='1AM' />
                <alias key='2' value='2AM' />
                <alias key='3' value='3AM' />
                <alias key='4' value='4AM' />
                <alias key='5' value='5AM' />
                <alias key='6' value='6AM' />
                <alias key='7' value='7AM' />
                <alias key='8' value='8AM' />
                <alias key='9' value='9AM' />
                <alias key='10' value='10AM' />
                <alias key='11' value='11AM' />
                <alias key='12' value='12PM' />
                <alias key='13' value='1PM' />
                <alias key='14' value='2PM' />
                <alias key='15' value='3PM' />
                <alias key='16' value='4PM' />
                <alias key='17' value='5PM' />
                <alias key='18' value='6PM' />
                <alias key='19' value='7PM' />
                <alias key='20' value='8PM' />
                <alias key='21' value='9PM' />
                <alias key='22' value='10PM' />
                <alias key='23' value='11PM' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Casual' />
                <alias key='1' value='Member' />
              </aliases>
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
                <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
              </aliases>
            </column>
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[trips]' derivation='Sum' name='[sum:trips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Duration Mins' datatype='integer' name='[trip_duration_mins]' role='measure' type='quantitative' />
            <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Hour (copy)_1498009827268812801:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:day_of_week:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:member_casual:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:rideable_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]' scope='cols' value='Date' />
            <format attr='auto-subtitle' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:1]' scope='rows' value='Predicted Trips' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:1] + [federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk])</rows>
        <cols>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{60504C8F-849F-49A4-AAAF-1BDE5427D968}' />
    </worksheet>
    <worksheet name='Reset Filters'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='Reset Label' datatype='string' name='[Calculation_1635651091523465219]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filters&quot;' />
            </column>
            <column-instance column='[Calculation_1635651091523465219]' derivation='None' name='[none:Calculation_1635651091523465219:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='128' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0eae8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#aa0000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1635651091523465219:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6881DEC3-D1BA-4269-9F80-15D615603E95}' />
    </worksheet>
    <worksheet name='Table RF Pred'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#321b79' fontsize='14'>Predicted Trips</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='14'>|</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='14'>|</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='RF Predicted Trips' datatype='real' name='[Calculation_1498009827266146304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=df,ntree=200, mtry=6);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=df[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Day' datatype='integer' name='[Calculation_1498009827275894786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DAY([date])' />
            </column>
            <column caption='month' datatype='integer' name='[Calculation_1498009827330859018]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [month]&#13;&#10;  WHEN &quot;January&quot; THEN 1&#13;&#10;  WHEN &quot;February&quot; THEN 2&#13;&#10;  WHEN &quot;March&quot; THEN 3&#13;&#10;  WHEN &quot;April&quot; THEN 4&#13;&#10;  WHEN &quot;May&quot; THEN 5&#13;&#10;  WHEN &quot;June&quot; THEN 6&#13;&#10;  WHEN &quot;July&quot; THEN 7&#13;&#10;  WHEN &quot;August&quot; THEN 8&#13;&#10;  WHEN &quot;September&quot; THEN 9&#13;&#10;  WHEN &quot;October&quot; THEN 10&#13;&#10;  WHEN &quot;November&quot; THEN 11&#13;&#10;  WHEN &quot;December&quot; THEN 12&#13;&#10;END' />
            </column>
            <column caption='weekday' datatype='integer' name='[Calculation_1498009827334266891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [day_of_week]&#13;&#10;  WHEN &quot;Sunday&quot; THEN 1&#13;&#10;  WHEN &quot;Monday&quot; THEN 2&#13;&#10;  WHEN &quot;Tuesday&quot; THEN 3&#13;&#10;  WHEN &quot;Wednesday&quot; THEN 4&#13;&#10;  WHEN &quot;Thursday&quot; THEN 5&#13;&#10;  WHEN &quot;Friday&quot; THEN 6&#13;&#10;  WHEN &quot;Saturday&quot; THEN 7&#13;&#10;END' />
            </column>
            <column caption='season' datatype='integer' name='[Calculation_1498009827334455308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [season]&#13;&#10;  WHEN &quot;Spring&quot; THEN 1&#13;&#10;  WHEN &quot;Summer&quot; THEN 2&#13;&#10;  WHEN &quot;Fall&quot; THEN 3&#13;&#10;  WHEN &quot;Winter&quot; THEN 4&#13;&#10;END' />
            </column>
            <column caption='MemberType' datatype='integer' name='[Calculation_1498009827336028174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [member_casual]&#13;&#10;  WHEN 0 THEN 1&#13;&#10;  WHEN 1 THEN 2&#13;&#10;END' />
            </column>
            <column caption='RideableType' datatype='integer' name='[Calculation_1498009827336597520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [rideable_type]&#13;&#10;  WHEN &quot;classic_bike&quot; THEN 1&#13;&#10;  WHEN &quot;electric_bike&quot; THEN 2&#13;&#10;END' />
            </column>
            <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[hour]' />
              <aliases>
                <alias key='0' value='12AM' />
                <alias key='1' value='1AM' />
                <alias key='2' value='2AM' />
                <alias key='3' value='3AM' />
                <alias key='4' value='4AM' />
                <alias key='5' value='5AM' />
                <alias key='6' value='6AM' />
                <alias key='7' value='7AM' />
                <alias key='8' value='8AM' />
                <alias key='9' value='9AM' />
                <alias key='10' value='10AM' />
                <alias key='11' value='11AM' />
                <alias key='12' value='12PM' />
                <alias key='13' value='1PM' />
                <alias key='14' value='2PM' />
                <alias key='15' value='3PM' />
                <alias key='16' value='4PM' />
                <alias key='17' value='5PM' />
                <alias key='18' value='6PM' />
                <alias key='19' value='7PM' />
                <alias key='20' value='8PM' />
                <alias key='21' value='9PM' />
                <alias key='22' value='10PM' />
                <alias key='23' value='11PM' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Casual' />
                <alias key='1' value='Member' />
              </aliases>
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
                <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
              </aliases>
            </column>
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Duration Mins' datatype='integer' name='[trip_duration_mins]' role='measure' type='quantitative' />
            <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Hour (copy)_1498009827268812801:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:ok]'>
            <groupfilter function='level-members' level='[none:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:qk]' included-values='all' />
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:day_of_week:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:member_casual:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:rideable_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]' direction='ASC' />
          <slices>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:ok]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:qk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='84' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]' value='188' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]' value='S' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{63473A11-2003-487D-9C13-EA5581DD8A38}' />
    </worksheet>
    <worksheet name='Trip Dur'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='14'>Trip Duration (min)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='RF Predicted Trips' datatype='real' name='[Calculation_1498009827266146304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=df,ntree=200, mtry=6);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=df[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Day' datatype='integer' name='[Calculation_1498009827275894786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DAY([date])' />
            </column>
            <column caption='month' datatype='integer' name='[Calculation_1498009827330859018]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [month]&#13;&#10;  WHEN &quot;January&quot; THEN 1&#13;&#10;  WHEN &quot;February&quot; THEN 2&#13;&#10;  WHEN &quot;March&quot; THEN 3&#13;&#10;  WHEN &quot;April&quot; THEN 4&#13;&#10;  WHEN &quot;May&quot; THEN 5&#13;&#10;  WHEN &quot;June&quot; THEN 6&#13;&#10;  WHEN &quot;July&quot; THEN 7&#13;&#10;  WHEN &quot;August&quot; THEN 8&#13;&#10;  WHEN &quot;September&quot; THEN 9&#13;&#10;  WHEN &quot;October&quot; THEN 10&#13;&#10;  WHEN &quot;November&quot; THEN 11&#13;&#10;  WHEN &quot;December&quot; THEN 12&#13;&#10;END' />
            </column>
            <column caption='weekday' datatype='integer' name='[Calculation_1498009827334266891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [day_of_week]&#13;&#10;  WHEN &quot;Sunday&quot; THEN 1&#13;&#10;  WHEN &quot;Monday&quot; THEN 2&#13;&#10;  WHEN &quot;Tuesday&quot; THEN 3&#13;&#10;  WHEN &quot;Wednesday&quot; THEN 4&#13;&#10;  WHEN &quot;Thursday&quot; THEN 5&#13;&#10;  WHEN &quot;Friday&quot; THEN 6&#13;&#10;  WHEN &quot;Saturday&quot; THEN 7&#13;&#10;END' />
            </column>
            <column caption='season' datatype='integer' name='[Calculation_1498009827334455308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [season]&#13;&#10;  WHEN &quot;Spring&quot; THEN 1&#13;&#10;  WHEN &quot;Summer&quot; THEN 2&#13;&#10;  WHEN &quot;Fall&quot; THEN 3&#13;&#10;  WHEN &quot;Winter&quot; THEN 4&#13;&#10;END' />
            </column>
            <column caption='MemberType' datatype='integer' name='[Calculation_1498009827336028174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [member_casual]&#13;&#10;  WHEN 0 THEN 1&#13;&#10;  WHEN 1 THEN 2&#13;&#10;END' />
            </column>
            <column caption='RideableType' datatype='integer' name='[Calculation_1498009827336597520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [rideable_type]&#13;&#10;  WHEN &quot;classic_bike&quot; THEN 1&#13;&#10;  WHEN &quot;electric_bike&quot; THEN 2&#13;&#10;END' />
            </column>
            <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[hour]' />
              <aliases>
                <alias key='0' value='12AM' />
                <alias key='1' value='1AM' />
                <alias key='2' value='2AM' />
                <alias key='3' value='3AM' />
                <alias key='4' value='4AM' />
                <alias key='5' value='5AM' />
                <alias key='6' value='6AM' />
                <alias key='7' value='7AM' />
                <alias key='8' value='8AM' />
                <alias key='9' value='9AM' />
                <alias key='10' value='10AM' />
                <alias key='11' value='11AM' />
                <alias key='12' value='12PM' />
                <alias key='13' value='1PM' />
                <alias key='14' value='2PM' />
                <alias key='15' value='3PM' />
                <alias key='16' value='4PM' />
                <alias key='17' value='5PM' />
                <alias key='18' value='6PM' />
                <alias key='19' value='7PM' />
                <alias key='20' value='8PM' />
                <alias key='21' value='9PM' />
                <alias key='22' value='10PM' />
                <alias key='23' value='11PM' />
              </aliases>
            </column>
            <column aggregation='Sum' caption='Trip Duration (Mins)' datatype='integer' name='[Trip Duration Mins (copy)_1635651091494989825]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[trip_duration_mins]' />
              <aliases>
                <alias key='2' value='2 min' />
                <alias key='3' value='3 min' />
                <alias key='4' value='4 min ' />
                <alias key='5' value='5 min' />
                <alias key='6' value='6 min' />
                <alias key='7' value='7 min' />
                <alias key='8' value='8 min' />
                <alias key='9' value='9 min' />
                <alias key='10' value='10 min' />
                <alias key='11' value='11 min' />
                <alias key='12' value='12 min' />
                <alias key='13' value='13 min' />
                <alias key='14' value='14 min' />
                <alias key='15' value='15 min' />
                <alias key='16' value='16 min' />
                <alias key='17' value='17 min' />
                <alias key='18' value='18 min ' />
                <alias key='19' value='19 min' />
                <alias key='20' value='20 min' />
                <alias key='21' value='21 min' />
                <alias key='22' value='22 min' />
                <alias key='23' value='23 min' />
                <alias key='24' value='24 min' />
                <alias key='25' value='25 min' />
                <alias key='26' value='26 min' />
                <alias key='27' value='27 min' />
                <alias key='28' value='28 min' />
                <alias key='29' value='29 min' />
                <alias key='30' value='30 min' />
                <alias key='31' value='31 min' />
                <alias key='32' value='32 min' />
                <alias key='33' value='33 min' />
                <alias key='34' value='34 min' />
                <alias key='35' value='35 min' />
                <alias key='36' value='36 min' />
                <alias key='37' value='37 min' />
                <alias key='38' value='38 min' />
                <alias key='39' value='39 min' />
                <alias key='40' value='40 min' />
                <alias key='41' value='41 min' />
                <alias key='42' value='42 min' />
                <alias key='43' value='43 min' />
                <alias key='44' value='44 min' />
                <alias key='45' value='45 min' />
                <alias key='46' value='46 min' />
                <alias key='47' value='47 min' />
                <alias key='48' value='48 min' />
                <alias key='49' value='49 min' />
                <alias key='50' value='50 min' />
                <alias key='51' value='51 min' />
                <alias key='52' value='52 min' />
                <alias key='53' value='53 min' />
                <alias key='54' value='54 min' />
                <alias key='55' value='55 min' />
                <alias key='56' value='56 min' />
                <alias key='57' value='57 min' />
                <alias key='58' value='58 min' />
                <alias key='59' value='59 min' />
                <alias key='60' value='60 min' />
                <alias key='61' value='61 min' />
                <alias key='62' value='62 min' />
                <alias key='63' value='63 min' />
                <alias key='64' value='64 min' />
                <alias key='65' value='65 min' />
                <alias key='66' value='66 min' />
                <alias key='67' value='67 min' />
                <alias key='68' value='68 min ' />
                <alias key='69' value='69 min' />
                <alias key='70' value='70 min' />
                <alias key='71' value='71 min' />
                <alias key='72' value='72 min' />
                <alias key='73' value='73 min' />
                <alias key='74' value='74 min' />
                <alias key='75' value='75 min' />
                <alias key='76' value=' 76 min' />
                <alias key='77' value='77 min' />
                <alias key='78' value='78 min' />
                <alias key='79' value='79 min' />
                <alias key='80' value='80 min' />
                <alias key='81' value='81 min' />
                <alias key='82' value='82 min' />
                <alias key='83' value='83 min' />
                <alias key='84' value='84 min' />
                <alias key='85' value='85 min' />
                <alias key='86' value='86 min' />
                <alias key='87' value='87 min' />
                <alias key='88' value='88 min' />
                <alias key='89' value='89 min' />
                <alias key='90' value='90 min' />
                <alias key='91' value='91 min' />
                <alias key='92' value='92 min' />
                <alias key='93' value='93 min' />
                <alias key='94' value='94 min' />
                <alias key='95' value='95 min' />
                <alias key='96' value='96 min' />
                <alias key='97' value='97 min' />
                <alias key='98' value='98 min' />
                <alias key='99' value='99 min' />
                <alias key='100' value='100 min' />
                <alias key='101' value='101 min' />
                <alias key='102' value='102 min' />
                <alias key='103' value='103 min' />
                <alias key='104' value='104 min' />
                <alias key='105' value='105 min' />
                <alias key='106' value='106 min' />
                <alias key='107' value='107 min' />
                <alias key='108' value='108 min' />
                <alias key='109' value='109 min' />
                <alias key='110' value='110 min' />
                <alias key='111' value='111 min' />
                <alias key='112' value='112 min' />
                <alias key='113' value='113 min' />
                <alias key='114' value='114 min' />
                <alias key='115' value='115 min' />
                <alias key='116' value='116 min' />
                <alias key='117' value='117 min' />
                <alias key='118' value='118 min' />
                <alias key='119' value='119 min' />
                <alias key='120' value='120 min' />
                <alias key='121' value='121 min' />
                <alias key='122' value='122 min' />
                <alias key='123' value='123 min' />
                <alias key='124' value='124 min' />
                <alias key='125' value='125 min' />
                <alias key='126' value='126 min' />
                <alias key='127' value='127 min' />
                <alias key='128' value='128 min' />
                <alias key='129' value='129 min' />
                <alias key='130' value='130 min' />
                <alias key='131' value='131 min' />
                <alias key='132' value='132 min' />
                <alias key='133' value='133 min' />
                <alias key='134' value='134 min' />
                <alias key='135' value='135 min' />
                <alias key='136' value='136 min' />
                <alias key='137' value='137 min' />
                <alias key='138' value='138 min' />
                <alias key='139' value='139 min' />
                <alias key='140' value='140 min' />
                <alias key='141' value='141 min' />
                <alias key='142' value='142 min' />
                <alias key='143' value='143 min' />
                <alias key='144' value='144 min' />
                <alias key='145' value='145 min' />
                <alias key='146' value='146 min' />
                <alias key='147' value='147 min' />
                <alias key='148' value='148 min' />
                <alias key='149' value='149 min' />
                <alias key='150' value='150 min' />
                <alias key='151' value='151 min' />
                <alias key='152' value='152 min' />
                <alias key='153' value='153 min' />
                <alias key='154' value='154 min' />
                <alias key='155' value='155 min' />
                <alias key='156' value='156 min' />
                <alias key='157' value='157 min' />
                <alias key='158' value='158 min' />
                <alias key='159' value='159 min' />
                <alias key='160' value='160 min' />
                <alias key='161' value='161 min ' />
                <alias key='162' value='162 min' />
                <alias key='163' value='163 min' />
                <alias key='164' value='164 min' />
                <alias key='165' value='165 min' />
                <alias key='166' value='166 min' />
                <alias key='167' value='167 min' />
                <alias key='168' value='168 min' />
                <alias key='169' value='169 min' />
                <alias key='170' value='170 min' />
                <alias key='171' value='171 min' />
                <alias key='172' value='172 min' />
                <alias key='173' value='173 min' />
                <alias key='174' value='174 min' />
                <alias key='175' value='175 min' />
                <alias key='176' value='176 min' />
                <alias key='177' value='177 min' />
                <alias key='178' value='178 min' />
                <alias key='179' value='179 min' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Casual' />
                <alias key='1' value='Member' />
              </aliases>
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trip Duration Mins (copy)_1635651091494989825]' derivation='None' name='[none:Trip Duration Mins (copy)_1635651091494989825:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:ok]' pivot='key' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
                <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
              </aliases>
            </column>
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Trip Duration Mins' datatype='integer' name='[trip_duration_mins]' role='measure' type='quantitative' />
            <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Trip Duration Mins (copy)_1635651091494989825:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[Trip Duration Mins (copy)_1635651091494989825]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Hour (copy)_1498009827268812801:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:day_of_week:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:member_casual:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:month:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:rideable_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]</column>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' value='Predicted Trips'>
              <formatted-text>
                <run>Predicted Trips</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' />
              <size column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:6]' />
              <text column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Trip Duration Mins (copy)_1635651091494989825:ok]' />
              <text column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1ABCAF38-1471-4F72-BD85-50B9EB4559FE}' />
    </worksheet>
    <worksheet name='Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#321b79' fontsize='14'>Predicted Trips by Rideable Type &amp; Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='RF Predicted Trips' datatype='real' name='[Calculation_1498009827266146304]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;library(randomForest);&#13;&#10;df&lt;-data.frame(Trips=as.numeric(.arg1),hour=as.numeric(.arg2),Trip_Duration_Mins=as.numeric(.arg3),&#13;&#10;month=as.numeric(.arg4),season=as.numeric(.arg5),weekday=as.numeric(.arg6),Day=as.numeric(.arg7),&#13;&#10;MemberType=as.numeric(.arg8),RideableType=as.numeric(.arg9));&#13;&#10;set.seed(42); &#13;&#10;trips_rf= randomForest(Trips ~ hour+Trip_Duration_Mins+month+season+weekday+Day+MemberType+RideableType, &#13;&#10;data=df,ntree=200, mtry=6);&#13;&#10;predictions&lt;-as.numeric(predict(trips_rf, newdata=df[2:9]));&#13;&#10;predictions&quot;, SUM([trips]),SUM([hour]),SUM([trip_duration_mins]),&#13;&#10;SUM([Calculation_1498009827330859018]),SUM([Calculation_1498009827334455308]),SUM([Calculation_1498009827334266891]),SUM([Calculation_1498009827275894786]),SUM([Calculation_1498009827336028174]),SUM([Calculation_1498009827336597520]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Day' datatype='integer' name='[Calculation_1498009827275894786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DAY([date])' />
            </column>
            <column caption='month' datatype='integer' name='[Calculation_1498009827330859018]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [month]&#13;&#10;  WHEN &quot;January&quot; THEN 1&#13;&#10;  WHEN &quot;February&quot; THEN 2&#13;&#10;  WHEN &quot;March&quot; THEN 3&#13;&#10;  WHEN &quot;April&quot; THEN 4&#13;&#10;  WHEN &quot;May&quot; THEN 5&#13;&#10;  WHEN &quot;June&quot; THEN 6&#13;&#10;  WHEN &quot;July&quot; THEN 7&#13;&#10;  WHEN &quot;August&quot; THEN 8&#13;&#10;  WHEN &quot;September&quot; THEN 9&#13;&#10;  WHEN &quot;October&quot; THEN 10&#13;&#10;  WHEN &quot;November&quot; THEN 11&#13;&#10;  WHEN &quot;December&quot; THEN 12&#13;&#10;END' />
            </column>
            <column caption='weekday' datatype='integer' name='[Calculation_1498009827334266891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [day_of_week]&#13;&#10;  WHEN &quot;Sunday&quot; THEN 1&#13;&#10;  WHEN &quot;Monday&quot; THEN 2&#13;&#10;  WHEN &quot;Tuesday&quot; THEN 3&#13;&#10;  WHEN &quot;Wednesday&quot; THEN 4&#13;&#10;  WHEN &quot;Thursday&quot; THEN 5&#13;&#10;  WHEN &quot;Friday&quot; THEN 6&#13;&#10;  WHEN &quot;Saturday&quot; THEN 7&#13;&#10;END' />
            </column>
            <column caption='season' datatype='integer' name='[Calculation_1498009827334455308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [season]&#13;&#10;  WHEN &quot;Spring&quot; THEN 1&#13;&#10;  WHEN &quot;Summer&quot; THEN 2&#13;&#10;  WHEN &quot;Fall&quot; THEN 3&#13;&#10;  WHEN &quot;Winter&quot; THEN 4&#13;&#10;END' />
            </column>
            <column caption='MemberType' datatype='integer' name='[Calculation_1498009827336028174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [member_casual]&#13;&#10;  WHEN 0 THEN 1&#13;&#10;  WHEN 1 THEN 2&#13;&#10;END' />
            </column>
            <column caption='RideableType' datatype='integer' name='[Calculation_1498009827336597520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [rideable_type]&#13;&#10;  WHEN &quot;classic_bike&quot; THEN 1&#13;&#10;  WHEN &quot;electric_bike&quot; THEN 2&#13;&#10;END' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Casual' />
                <alias key='1' value='Member' />
              </aliases>
            </column>
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
                <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
              </aliases>
            </column>
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column caption='Trip Duration Mins' datatype='integer' name='[trip_duration_mins]' role='measure' type='quantitative' />
            <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1498009827266146304]' derivation='User' name='[usr:Calculation_1498009827266146304:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>&quot;Winter&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]' value='112' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' value='88' />
            <format attr='wrap' data-class='subtotal' scope='cols' value='on' />
            <format attr='text-align' data-class='total' value='center' />
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='border-color' data-class='total' scope='rows' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]' value='false' />
            <format attr='text-align' scope='rows' value='left' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' value='Predicted Trips' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' />
              <text column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</rows>
        <cols>([federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk] / [federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok])</cols>
      </table>
      <simple-id uuid='{115E6F28-38D7-4BC8-91AB-659B31278F47}' />
    </worksheet>
    <worksheet name='Trips by Hour over 2023'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trips by Hour </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
          </datasources>
          <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
            <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[hour]' />
              <aliases>
                <alias key='0' value='12AM' />
                <alias key='1' value='1AM' />
                <alias key='2' value='2AM' />
                <alias key='3' value='3AM' />
                <alias key='4' value='4AM' />
                <alias key='5' value='5AM' />
                <alias key='6' value='6AM' />
                <alias key='7' value='7AM' />
                <alias key='8' value='8AM' />
                <alias key='9' value='9AM' />
                <alias key='10' value='10AM' />
                <alias key='11' value='11AM' />
                <alias key='12' value='12PM' />
                <alias key='13' value='1PM' />
                <alias key='14' value='2PM' />
                <alias key='15' value='3PM' />
                <alias key='16' value='4PM' />
                <alias key='17' value='5PM' />
                <alias key='18' value='6PM' />
                <alias key='19' value='7PM' />
                <alias key='20' value='8PM' />
                <alias key='21' value='9PM' />
                <alias key='22' value='10PM' />
                <alias key='23' value='11PM' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative' />
            <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
            <column-instance column='[trips]' derivation='Sum' name='[sum:trips:qk]' pivot='key' type='quantitative' />
            <column caption='Trips' datatype='integer' name='[trips]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]'>
            <groupfilter function='level-members' level='[none:Hour (copy)_1498009827268812801:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' />
              <lod column='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trips:qk]</rows>
        <cols>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{ED69316D-4C5C-4515-BFF6-1F9BF79DA19C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard RF'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Rockwell' fontsize='24'>2023 Trip Demand Prediction</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='modelingdata' name='federated.0w4eepb0v5ppb9126ghmz0ae620n' />
      </datasources>
      <datasource-dependencies datasource='federated.0w4eepb0v5ppb9126ghmz0ae620n'>
        <column caption='Hour2' datatype='integer' name='[Hour (copy)_1498009827268812801]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='[hour]' />
          <aliases>
            <alias key='0' value='12AM' />
            <alias key='1' value='1AM' />
            <alias key='2' value='2AM' />
            <alias key='3' value='3AM' />
            <alias key='4' value='4AM' />
            <alias key='5' value='5AM' />
            <alias key='6' value='6AM' />
            <alias key='7' value='7AM' />
            <alias key='8' value='8AM' />
            <alias key='9' value='9AM' />
            <alias key='10' value='10AM' />
            <alias key='11' value='11AM' />
            <alias key='12' value='12PM' />
            <alias key='13' value='1PM' />
            <alias key='14' value='2PM' />
            <alias key='15' value='3PM' />
            <alias key='16' value='4PM' />
            <alias key='17' value='5PM' />
            <alias key='18' value='6PM' />
            <alias key='19' value='7PM' />
            <alias key='20' value='8PM' />
            <alias key='21' value='9PM' />
            <alias key='22' value='10PM' />
            <alias key='23' value='11PM' />
          </aliases>
        </column>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column caption='Day Of Week' datatype='string' name='[day_of_week]' role='dimension' type='nominal' />
        <column caption='Member or Casual' datatype='integer' name='[member_casual]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='0' value='Casual' />
            <alias key='1' value='Member' />
          </aliases>
        </column>
        <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
        <column-instance column='[Hour (copy)_1498009827268812801]' derivation='None' name='[none:Hour (copy)_1498009827268812801:ok]' pivot='key' type='ordinal' />
        <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[day_of_week]' derivation='None' name='[none:day_of_week:nk]' pivot='key' type='nominal' />
        <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:ok]' pivot='key' type='ordinal' />
        <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
        <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
        <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;classic_bike&quot;' value='Classic Bike' />
            <alias key='&quot;electric_bike&quot;' value='Electric Bike ' />
          </aliases>
        </column>
        <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='15' param='vert' type-v2='layout-flow' w='99150' x='425' y='940'>
            <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99150' x='425' y='940'>
              <zone h='98120' id='5' type-v2='layout-basic' w='99150' x='425' y='940' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9753' id='82' is-scaled='1' param='C:/Users/nehas/Documents/GT 2023/CSE 6242 DVA/Project/divy logo.png' type-v2='bitmap' w='16738' x='4570' y='353' />
        <zone h='46298' id='27' name='Table RF Pred' w='18703' x='49813' y='15746' />
        <zone h='8461' id='28' name='Table RF Pred' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:qk]' show-domain='false' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' w='13653' x='50000' y='20917' />
        <zone h='39835' id='12' name='RF Reg Model Line' w='48940' x='374' y='60165' />
        <zone h='44771' id='40' name='RF Reg Model Bar' w='49127' x='374' y='15864' />
        <zone h='9518' id='47' name='RF Reg Model Bar' pane-specification-id='1' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' type-v2='color' w='10536' x='36534' y='16216' />
        <zone h='42303' id='55' name='Trips' w='50638' x='49841' y='62397' />
        <zone h='12456' id='56' name='Trips' pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' type-v2='color' w='9511' x='55154' y='92479' />
        <zone fixed-size='78' h='8226' id='16' is-fixed='true' type-v2='title' w='48565' x='19926' y='1058' />
        <zone h='5875' id='63' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98565' x='691' y='10928'>
          <zone fixed-size='192' h='5876' id='46' is-fixed='true' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' type-v2='filter' w='16472' x='691' y='10928'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='251' h='5876' id='45' is-fixed='true' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' type-v2='filter' w='16418' x='17163' y='10928'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='272' friendly-name='Weekday' h='5876' id='44' is-fixed='true' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' type-v2='filter' w='16419' x='33581' y='10928'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='192' h='5876' id='43' is-fixed='true' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' type-v2='filter' w='16419' x='50000' y='10928'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='294' h='5876' id='42' is-fixed='true' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' type-v2='filter' w='16418' x='66419' y='10928'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='247' h='5876' id='41' is-fixed='true' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' type-v2='filter' w='16419' x='82837' y='10928'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='87544' id='66' name='Trip Dur' w='31243' x='68332' y='16099' />
        <zone h='12456' id='67' name='Trip Dur' pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' type-v2='color' w='9663' x='80923' y='79671' />
        <zone h='4935' id='72' type-v2='text' w='31546' x='67082' y='15159'>
          <formatted-text>
            <run bold='true' fontcolor='#321b79' fontsize='14'>Predicted Trips by Trip Duration (min)</run>
          </formatted-text>
        </zone>
        <zone h='5875' id='75' name='Reset Filters' w='10723' x='90337' y='4113' />
        <zone forceUpdate='true' h='8696' id='83' type-v2='text' w='31403' x='57492' y='1058'>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b' fontsize='8' italic='true'>Using a random forest regression model, we are able to predict the number of trips that may occur. We can analyze predicted trips by various features to better gauge when demand is high/low. Lets take a closer look! </run>
          </formatted-text>
        </zone>
        <zone h='8931' id='105' is-centered='0' is-scaled='1' param='C:/Users/nehas/Documents/GT 2023/CSE 6242 DVA/Project/GTVertical_RGB.png' type-v2='bitmap' w='5101' x='956' y='705' />
        <zone forceUpdate='true' h='3525' id='110' type-v2='text' w='6270' x='93358' y='1293'>
          <formatted-text>
            <run bold='true' fontname='Vladimir Script' fontsize='10'>N.Shah</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontname='Rockwell' fontsize='24'>2023 Trip Demand Prediction</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2600' minheight='2600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='112' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='111' param='vert' type-v2='layout-flow' w='99150' x='425' y='940'>
                <zone fixed-size='78' h='8226' id='16' type-v2='title' w='48565' x='19926' y='1058'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='9753' id='82' is-fixed='true' is-scaled='1' param='C:/Users/nehas/Documents/GT 2023/CSE 6242 DVA/Project/divy logo.png' type-v2='bitmap' w='16738' x='4570' y='353'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='8931' id='105' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/nehas/Documents/GT 2023/CSE 6242 DVA/Project/GTVertical_RGB.png' type-v2='bitmap' w='5101' x='956' y='705'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8696' id='83' type-v2='text' w='31403' x='57492' y='1058'>
                  <formatted-text>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='8' italic='true'>Using a random forest regression model, we are able to predict the number of trips that may occur. We can analyze predicted trips by various features to better gauge when demand is high/low. Lets take a closer look! </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3525' id='110' type-v2='text' w='6270' x='93358' y='1293'>
                  <formatted-text>
                    <run bold='true' fontname='Vladimir Script' fontsize='10'>N.Shah</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='47' h='5875' id='75' is-fixed='true' name='Reset Filters' w='10723' x='90337' y='4113'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4935' id='72' type-v2='text' w='31546' x='67082' y='15159'>
                  <formatted-text>
                    <run bold='true' fontcolor='#321b79' fontsize='14'>Predicted Trips by Trip Duration (min)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='28' name='Table RF Pred' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:qk]' show-domain='false' show-null-ctrls='false' show-reldate-picker='false' type-v2='filter' w='13653' x='50000' y='20917'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46298' id='27' is-fixed='true' name='Table RF Pred' w='18703' x='49813' y='15746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='5876' id='46' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' type-v2='filter' w='16472' x='691' y='10928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='5876' id='45' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' type-v2='filter' w='16418' x='17163' y='10928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' friendly-name='Weekday' h='5876' id='44' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' type-v2='filter' w='16419' x='33581' y='10928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='5876' id='43' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' type-v2='filter' w='16419' x='50000' y='10928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='294' h='5876' id='42' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' type-v2='filter' w='16418' x='66419' y='10928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='5876' id='41' mode='dropdown' name='RF Reg Model Bar' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' type-v2='filter' w='16419' x='82837' y='10928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44771' id='40' is-fixed='true' name='RF Reg Model Bar' w='49127' x='374' y='15864'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9518' id='47' name='RF Reg Model Bar' pane-specification-id='1' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' type-v2='color' w='10536' x='36534' y='16216'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87544' id='66' is-fixed='true' name='Trip Dur' w='31243' x='68332' y='16099'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12456' id='67' name='Trip Dur' pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' type-v2='color' w='9663' x='80923' y='79671'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39835' id='12' is-fixed='true' name='RF Reg Model Line' w='48940' x='374' y='60165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42303' id='55' is-fixed='true' name='Trips' w='50638' x='49841' y='62397'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12456' id='56' name='Trips' pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' type-v2='color' w='9511' x='55154' y='92479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{204EE14B-E4BA-4C1D-A102-B550BA8B5F5D}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Trips by Hour over 2023'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:hour:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{992C22EA-A797-4251-8FE4-5CFE237B9CA7}' />
    </window>
    <window class='worksheet' name='Trips'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:3]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0193C051-3167-4078-ACAF-362B6CC1B36D}' />
    </window>
    <window class='worksheet' name='RF Reg Model Bar'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='47'>
            <card type='columns' />
          </strip>
          <strip size='47'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]' type='filter' />
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]' type='filter' />
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]' type='filter' />
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]' type='filter' />
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]' type='filter' />
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1498009827330859018:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1498009827334266891:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1498009827334455308:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Hour (copy)_1498009827268812801:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:day_of_week:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:hour:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:member_casual:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:month:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:rideable_type:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD2499B5-C08B-4F3A-A0AE-0A8782B9D7A9}' />
    </window>
    <window class='worksheet' name='RF Reg Model Line'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='2' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1498009827334455308:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:hour:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:season:nk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12BB68D6-6714-49D1-8A5F-77BBB75493A8}' />
    </window>
    <window class='worksheet' name='Table RF Pred'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='47'>
            <card type='columns' />
          </strip>
          <strip size='47'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:date:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[tdy:date:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D57F600C-3FCB-40FE-8350-A115FCBF291A}' />
    </window>
    <window class='worksheet' name='Trip Dur'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='47'>
            <card type='columns' />
          </strip>
          <strip size='47'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='0' param='[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Trip Duration Mins (copy)_1635651091494989825:ok]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[sum:trip_duration_mins:qk]</field>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[usr:Calculation_1498009827266146304:qk:8]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03AD3A23-A147-4C22-8A72-73CF4EB0323F}' />
    </window>
    <window class='worksheet' name='Reset Filters'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='47'>
            <card type='columns' />
          </strip>
          <strip size='47'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1635651091523465219:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE553F89-D99A-410B-82B4-FEB3EA9BB03E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard RF'>
      <viewpoints>
        <viewpoint name='RF Reg Model Bar'>
          <highlight>
            <color-one-way>
              <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='RF Reg Model Line'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Reset Filters'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0w4eepb0v5ppb9126ghmz0ae620n].[none:Calculation_1635651091523465219:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Reset Filters&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Table RF Pred' />
        <viewpoint name='Trip Dur' />
        <viewpoint name='Trips' />
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{BDD8C352-0AC4-4DC5-9E40-5B1154462A78}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard RF' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RF Reg Model Bar' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z3Bka3rf9zuhc05oNDIaGZg8c+9mimJYLiWRWtaWWRTFpVwsqpQtyxJN
      UpKtkiXbNCmZsmWzSpTLNFW0ZYoUKZeLyavlMi5378ydwQRkoBuhu4HOOZ0+wR8ak+7cmYtB
      uJjQvw+3Lho973nwdj/nnOc9z/v/C4ZhGPTo8ZYinncAPXqcJ69tAtRqtfMOoccbwGubAJqm
      nXcIPd4AXtsE6NHjNOglQI+3hnq1TKejUKw8vn3uJUCP155aPsbf/7F/wE/91M+wk62iqiqq
      qqGpKh1VBcNA7XT43d/89+znysSTGQxdp60oyOcdfI8eJ0XXOlz69HdxdaDO7fu3+Pnf/Cqf
      +sJ3El/8E8ptgR/6wS/yb/7Nr1Cvl7j8zqe5uZRg6xu/xUHD1LsC9Hgz+PpX/h9+b6nA5y6P
      M3P1s3zr1RGahourc1E2lh/wme/9IT53Y+7w3R3yLSt//a/9aO8K0OP1RzLZ+OJf+GG+7XOX
      6bSyDA+FcXgHGeuT2Uzk+OKX/iy//m9/GUwW3rHaiQT7CPtV/ud/+a8QXtcnweVyGY/Hc95h
      9HjN6d0C9Xir6SVAj7eaXgL0eKvpJUCPt5q3bhWoUTzg9soOfeF+wm6J1Z0soiQzO+RjeTeL
      IMi8c+0iwkuNapDajRNLFfnsJ6+zcu992pqBt2+cZn6HtqbhCUdp5Q7/vy/K+GDgyKOnkzus
      baf53GfeZWnxFoLJRrB/iHJ6m6aiYvcNQj1Dvd3B7htgeixytIF1lbXVNdrtBs7QGJWDOKph
      MDJ1gdTmAzQDhiYvcLD1AM0wiExcIuK3H3FKdDbXV2k2W1i8EWqZOBaHh4GRcRKbS6i6TnB4
      jnJyHVXXCAzPMdznPvKc7GytUak1MLlCGLX0s/PdF6VV2KWtqrj7xokOBj90nLfuCqAoCiaL
      BQSBZDLHletXcYsaS3s5bly7ikvQaL/0qAIDI1H87u6Xo6WLXLl6nWJ2m7YuceXqDUqZOG3N
      xJUr1ylnEy81enhwlKDPdXgkAV3TECWRhmJw6co1asV96m2DK1eu0iiljz6wKDM9N4/DIiMY
      CqLDx7ULMySTuwgWN1cuLZA+2MKQPFy5dpVMIn70sQWRiek53HYzsklCEEQ0TUOSQBOsXLl2
      g9z+Gip2rly7QT61/VJzEgwG6agaNqv1w+c7G6etyly5cp1KNvnccd66K4A7OMi74RHW7t+m
      o4t0NB3NAJsEim6gAdJpHMjQeTi9hq6CYALDwDBUEI4/7bMXryBJAu/fXkQSRTA0uucxAwOd
      lzqnGQZLd24SGJ0l7JK5X6mhaSqybEZvt9A1FVG0otPB0BQEyfJSY6/dv40jPM5Inw8jEgSt
      xd3VOAI66CqCYAE0DF0B0fRS82B3+5mdMljdznWv1sec77fuOUAln2Z3P4sgW5kc7WNlNYbd
      4yc64OX+Sgy728/MxMjLDWoY7G1vspvKMDI+hdipkC1UGZ2ap5FPkC1WGJmYo1VIki1WGZqY
      IeCyHXn41G6M+N4+AyNRRKVCpd4m0D+MpJQ5yJWIjE5BI8d+tkj/yCRhv/NoYatNvnHzLm63
      i/DgKNXMHuWGwvTcAundDcr1NlNzF8nurlOqtZhauITDfLTTg6F3uPneTRwuD8H+ISqZXZqK
      zuD4FPVcgkK5RnT2EuX9GPlynfGZC3jsR0+C9eV7KLqALzSI0CqQKVYZnZynmU+Q+eB8R2cI
      uD98vt+6BOjR40neuhrggxiGwVmdA17XsXVdP5Nx4dWbk7c+AV7XD/vh+K/TuPDqzfejW6Ba
      rfZabTOs1+tYqrkTj6MbBoIgvOSy5xGxOZHcfgTh9Ed/+GGL4umfw7qrNaeyFPAMuq6fSczw
      OHFfZr6PVAMsLS0zPz+LqmpIsgyGcbgUJwPdD6Gb2QaapiPLMoZhPPpjRUFAP/ywdrZWydV0
      rl+efzR+o5xna3efZqvF7OQIK5tJZLOZmdEw8b0D6o02F+bGie+mqDcV3r1+lUoxT+XvfddL
      T9LHieM7fgDfX/i7z/3AS22V39wpMu21cT3keKkPTtd1DMM4ky+qqqrI8tksEKqqiiRJZ3JS
      0DQNQRBeKsGO9Fe2FYVWrcxuKk1bE9GbRWxOL21NwITK3Pw8d+8tMhTuI5vNYO8bJbF8B8/A
      KJ1mnYXJQWIZhbmJQUYnpmgsbzw1vt0TYGHOye3bi8RjSS5ev0ri/iKCK8j8rJObt+5hdfsI
      eMo0WurLzcorzK9u5fmt3RJWSeDn/lQUj/mtW5U+d46QKgZgkM/lUDoqlUoZs93FzMwMMtpT
      78lmsxiaSrFSxxsa4MLsFH67zPpOhqHB/uceQW3XeO/mXWYvXcNuEtENAwPQ21Xeu32fi1ev
      IBng8QYw6R2U13Ph6hmGnRYkASJ2M1bprS/HzoUXn3LUNstr67h8fchSGwQRl9OJ3d5dU7Xb
      7Qhai6XlFQSTHYkOuiDgtFkwm0EARicm+Oofvs+FCxKgE1tfI5vN4c0EyBxkuHxpgcJBEsFs
      ZXc7zlh0hJXFRSwOF9X9PUxWKzuxbfr6XBwcFBAsNuQzuHyeB58f9nApYMdjkbD0EuBcOPPn
      AMn4Kpq1j5GI/6nXdVWhqRo4rC/xdPEJyuUybrv1xPFpmoYoSpxFTukICJJ8JkVfrwZ4luPU
      AEdKgHK5jNvjOYWVEoNqKU8yU2ZyMoosdkc0DJ3kThzB5mWgz09iJ4bD34/PZSOxHUNy+An7
      HMTjcZz+MOGAl0qpiPYb//rkER2uAp0FhmEgICCHBnB/4csAaIaBAIgnPGYvAZ7lzIrgrVic
      +elxYtsJgpFhjFaZcqWGp28AWe8QCAZJp9PIqBzkKoxPTVIvZCnWmnhcbvqCHjKFOuGQh2qj
      Q3TQzb2lONcuRgFoVks4AhFSmw9oldJIviHiq8tIM1FcoSHiS/dwOecZHJvkweL7BP3vYug6
      ta/+u+PN1MeMOXoB9xe+zHqpyU/dThKxm/ivbgxjlXu3PefNkT8BQRARBVhbWyObLzA+OU12
      P0kmkwEgtZ9ElCS0ZpGN3TSrK+sMDg2zv5+gmE3RNkRAJOB1sHh/i4mJ4Udj21w+WsV9OiYP
      zYZCpM+N1yYjOPw08nsITi9Ou53k1jKNTjeO15HFXJ2yorFWapFuds47nB58VALoGp2OgqYb
      xDe3GBgdw2ISEWUTJlnqru/rGu1mjZaiEd9JER0dAkMn2BfBYTUzEfHx/lqaSNANaNy9t8LV
      d97FYzdRLpcBqGR3ybctXF6YIeSxkM5VqbR1lMw2Jd3BlYVpGtUaI1MLBKwCTe31XAX69iEP
      nww7+eK4nyGn+bzD6cFH3QIZOvFYnNn5BcxGm51kmsmJCeTDFYuhoUEko8Pefp7pyUkEtUm+
      pTMW8SPo3SVSZzCCz1XBJApgGHjdTtZXVwiGguSLNTweD5LZAe00K2sNpianSe3GGJ6cwWI0
      0YsZlpdrjEcHiW+u4xsaxy4JVEQRx7d834knwDD0w/vRs7isdBNV7hsCIGA18WNXB8/gOD2O
      y5mvAqV2Y7jDIzgtp1tUlctl3O6j7yB6Ht3H/iInSYDnFXTHKcqOSq8IfpYzK4I3N7eYmJw4
      1ldkYCT6xE86m6srNFpt+kdn6PM5AGhVi2zsJFE1o9sKsRbHbHcRHfAR203RVmE2OkBsN0VH
      F7hycR5D7bD3IzeOEdHpYv7nX+V+Hd7pc+I95STvcfYc6ROrVKs0KwViu0lEixOjWUCQrGC2
      YzI6TE1Ps7T0gKDXxUE6S2h0iv31+0iuIBI6c9EIWwcNZqIDjE1Ok05sUqk2HyWA2e5mYd7D
      /Ts32ViLMXXpCsmluxi2MebnPdx+7xZml4+pqJm7D1Z5lR4E//SdJDsdmfczNX7i+tB5h9Pj
      JTnytaJWrWIgUizkEEw25hcWoNNCVbu9OUpHoVqtIYs6mXwZyeLm8oVZrIJKPJGmL9wHCDRr
      ZWotHZEnenoMlTu33iMSnccsiciSgAQYRof3b95kdGYBk2CQy2SQRAmNVycDHj7BtfSWNF9L
      jtQKYba7aDWbGIKAyWR6dH8oyzKC1mRpeRlFF2k2m0iShCxLWBwOBGBicozf+cO7TE7Ngtpm
      N3GAYWiYRVhdW2d2ZprM7gZ1w0Iuvc/QcD/3bt1BNpuxxtfoyDay+ykEzUWp1kTXDc6mYD0e
      P3FtkK22yLzviGoJPV4pzr4I3lmnjpup0aeb4fROi1JDxe852v7VD1IulbBVsyeO76T96abB
      CYTn/PteEfzhY79KRfCREqDVamGxWo913tX17jLjk39wtVLB4XI9agcwDINKqYBgsuFy2KiU
      CpjtbmwWmVIhj2hx4LKZyefzWOxuXA4r5WIR8dZvHyOiD8ZnIIhnsyFGP2yFOMpn7fjs9yLa
      HEcfu5cAz3Bmq0DLK6tcnJ9mK77DwEgUo9OgmMvh6x9G1BRcbjelUglRV0jlqkxMjNOsValU
      qzidbjweO6VyC6/HidIo89Wv/D6f/+Kfwy51J6FZKVCqtynsbxAKBSl1TDSK28xOj1JpdjhY
      vcfspVk6msHG/bu88+67GLpG8f/6Z8ebqVeQzOSn+PmDHFG3hR+dCyO9ro+7XzOOnCq6rmOz
      Wrh//wHbsU1CAyPsxrdIJLoiT/HtGAYColJibeeAxZs3sTg9xONbVHMHFOptwGBza5uJ6OhT
      Y9s9AbxWAVWyUyzWmJoaJWCVwBnEZTbAasfldFEvZlANGekN/G58LVVms9ziq4kymV6bxMfG
      ixPAMNB1DcMw2I3FsLm8WEwiJqsDh82CJIoYhoGmdtB0ndj2LsFAAF3XCEWGCXldjASdLG5l
      GAz70VpVStUWyeQuqYMciqIA0CgdsJmqcP3qRbx2mXKtTUMz0EpJ4pkGN65eQO2ojM8s4DND
      4zVthXgRn4u4GXaa+WzETcj2ciJRPY7Pi2+B9A5raxsMj09io8XeQZZQXxiHtdvH0tcXQtDa
      bGzFCfUNYNJb5Ktt+oIRZK27KhIYGsOUuINFEkBy8+lPf4J8JoPT6+T+8jrXr1xAUVRkQWV1
      bYPJiWniGxt4+4fQ1Tay0WJ1ZYOBAT+pZAarvw+7JFAWBCwz1088AWfaDo1xWFt89PiDATf/
      Inp0vdAep8PHsCFmHVtoFL/z6Y0vx9nB/ySnJYz1qhVlR6VXBD/LmRXBe4kEQ0NDx1opGRyf
      furnrdUlWhoMjU3icXSTQmlUWI/tgmRmdnKY5eV17J4Aw31uNmK7IFmIDgaI7aYQTFbmpycw
      NJXUj3/xGBE9zcf9VKHvv/81NsotBh1m3L1N8OfOkT6BbDZHwG0ntpvE6gpgNPN0NBGz04sJ
      ldHRUTY3N3DZzKSzBQai02S3N+hIVmxmE9GRPnbSdaIj/aRzOaIzF3DbH7cDC7KV+YULrN69
      ycqDBsPzF0mt3KMT6WNhYYG7N28huyaZn3dz+/YimkHX+zWzd1bzcmb88kaOX4sXGXSY+eef
      GcV0Rho5PY7GkWdfUdqAQHo/SceQmFtYQKlXaNTrAFRrVdqKgmR0SKTz1JoqF+Zn6DRrJFP7
      OD1eAC5fuYqgFFnZTD0aW5ZFlu/ewt43hiSAzSxhEQUMUeLBnVv4hsYwCwbxjTU6+uv9hal2
      um3i9Y6G/ubV8q8dL74CaAqbsTjIFvLZPLLZgiC2gCduG7Q2Gxvr1Nsq5As4bWY6gNPZfdA1
      NTHIV76+yhe+Yxp0hcReCl1rYvV42d7eZmxsjPT2CoW2jK1VJ9Lv5/7dB+gqWGL3qBhWbM06
      +ZyGJpgRtTrqq9QN95L8xekQoy4r015bTwniFeDFRbBhoCgKssmMgEFHVZFkubup+wk1OFXV
      D3vqDXSdw//vvqdaPGAv22J+egwATVXRdAMZlXSpSaTPj65pXUt7wGw2o6odRFFGQKejds+Y
      JrOJjtJBkmQkWaJSKmLavH3iCdB1HUEUz/BJ8NOFvu36t51KAdgrgp/lzFohDMOAY+pnVkol
      HB4P0hNtD48O/iGvPRVcdxPZh7wuUC6VMO8tHyOip9E1rTthZ/CB6LreTYCX+UBkE9a5d440
      di8BnubMVoHuLN7l8sV5srkCvkAIQ1No1KrY3X4EXcVitdJsNhEMlVKtTV8oQKfdptlqYbFY
      kTBothRsVjOr9++gSRZGxqceFcLNSoGtvX1qlQqT0WE297qitxemhtlJHFAsVrl8eYbdvX0K
      pSqf+dQnMDSV7P/4t44xTa8WseA0vz/93dzY+WMuJm8heYMM/uzvnHdYbw1HTpVOu4Wqdlha
      XmV16R5tDdbXN4jFYgCsrq3QbDZpldJsJbN884/+gGKtyerqKo1Shr10CbQGif0SekdBUR/v
      B7B7AsxERxElE/upPFdvXCVkERBcQSbHh5FNJpxuLzbJwGS2nomI1XnxG5d+gHvDn+DXrv2l
      8w7lreTI2qAHyST1Zpt2u4nZ7iIS7uPxHhCjaxO0u4uqqdSbLYKREcaHIoTdFh5sZxgaCIEg
      E+gLc+nyBXa3Nh8doV0vcvvBJtdu3MBlEWh1dDo66PUciyvb3HjnGoIhEJ2ew06H1hvUCjGf
      uoNJbbOQfP+8Q3krOdKGmGD/EA6hTTVfwev14XF2tUG9Xs8jbVCr04eVNq12B5/PgUnr9rNE
      xifY+KNb2EwiYKHfb+XevWXGouPcun2PG9cuUSsVMZlNbGxsMDExyeryPWyeAM1SGatFYmNt
      k3Cfi/2DApLTg1USUASQvKETT0C3XeHsWiGAF47/nQff4E/lFjFpbURvCNHtf+57e5w+H0Mr
      xBqie5BI4OmNL7qmoupgNh2v2Oq1QvSK4A9yZkVwJpslFAodsxVi5vEPmsLq+iaapuIODjHc
      3z3baZ0W8fg2gtnJ+HCYrY1N7L6+Qz3QbUSri+E+N1vbe1gdXsaGI6CpZH72PztGRE9z0mY4
      yeUj8KP/+NHPumGQb6l4zVLPf+o14EgJkEgkcVokYrtJ3IEIRrNAvdnB5e9DRiUSibC3t4tZ
      NEjnyoxOzVBJ71FuarhdToYjfhLZGsORELNz8yQ2l5Ctj/fQqh2VgdEJdlYXWa8V8YxMkdlY
      wu2cZnh8gtXFRdSBEJNTM9xbvM3wUATDMGjd++Mzm5ijIvnDT/3877fy/OpWgStBO//llSM6
      tvc4N17iJCUgCiJ7O3Hq7Q5zCwtUCjlKxSIAuXwOQRQR9SbbyQx7iTSzs9OU8lkyBykkS/cL
      b+gqmapK2PNY2txss3MQX8Nw9KF1NPxuK06ThGFxkthaweIPYzfJ7GwsUe8Ir7Q26Ea5hWoY
      rJVa5x1KjyPw4gTQVIqFPDoiid09/H19iGJXRrD7hBN0rUM+m6bRVkmmMoQCXgwMfP4gsigw
      NdrH7bUM4UPVhGwiRnBgDEEwSKfTABSSm5R1B8PhAOGgk/h2iqKi0dhbpSF7GQz7KRcL+PpH
      cEsGrVe4ieaHZ0J894iX//xy7+z/OvDiIljXSB2kCYTCSHTI5st4PG5EQcBqtdJqtRANlUK1
      hctpB02hqRg4nA4EXcdqs6J36txd3ePqxVkAGo0GNrsdo9NgO1UkOjpIu1ElnSsiiDKRSIRy
      Po3F5UPWFTL5IoIg0x8Jkk1nsLt8eNwOKsUifP0/nHgCDF1HEMRj90SLVgeub//+D/1drwj+
      8LFfpSL4zFeB9hN7BCJDmE95I2+5XMLerp14nLNshTB0HYSutDyA7A8jyKez3bGXAM9yZqtA
      S8vLzM/NHVqjSnSb3h571AqC8Kjv5aEdKnSVl8MDQ4gCh+/XuX9nEUMwCAzOMBhyAY9tUlut
      NjNTw6xsJDFZLEyP9HVtUpsKF2bHujaprQ7vXruCoars//iff7kZOkcMIP23f4GYY4AvjHh7
      OqKvCEezSW0rNGsldhL7dAwZvVnA6vCg6NJTNqmD4RCZdAZnZJzE0m3c/SOo7QYLk4NsZdrM
      T/SjdHS8XhvtlvJo/K5Nqovbt+8Q3/qgTaqLW7fuYnX7CPmqNPYLZzYZZ0nD7ORf7Gm0TXmq
      isZfXgh/9D/qceYcsRUCivk8qqYf2qS6mZ2d+4BNKuRzOQRDo1Su4Q0OcHF+Gr9NZn330Ca1
      08aQrbg9Xtqtx7cvarvGzZt3mLl49WmbVKXKe+/fY+FK1ybV6fIg69praZNq0hT6BAVJgMGe
      OcYrw4sTQG2zvPQAlzeIJIogiDgdDuy27oqO3W7Dbha7NqmyresKL5uw2yw4Xc6uTerkBAfp
      Ii6rDJIFs9BhP53F7XZy7/4SAIWDBIbZxt7ONoPjI6wtLqJYnFSSe8g2K7vxbfL5A7Z3k4hm
      62tpk2rWFP7xBR8/+5lxvjDiPe9wehzysdikqtY+Rp+xSW3T7IDDdnybVJf15GdSTdMOk/ss
      9gNoXWnEh7WSyfJSewNePHavCP4gZ7YKVKlUcLndp2KTWs5nKDQ0xoYiT2yI0UnuxhFtPiIh
      H8mdGI5ABK/TRmJ7C9kZIOxzEIvFcAX66fN7qJSK6L/1v584Iv2wFeJMDJJOKP3y4rEBnt/G
      8bgN7+mP1zr/CWxXPvfCsd+mBDiaQ8xWrGuTupMg2D+M0a5QrlTxhroeYYFAgEwmjWSoHOQr
      RCcnqRVzlGpN3C43fQE32WKdPo/MRqLImB/WExZmhrtCUM1qCbsvwv7WA5pFJ6J3kNjKEpPT
      47iCg8SW7+G4MM/g2AQPFm8T8HVtUqtf+bfHm6k3HFWU+T8+/beJB6f58p/8L8ym7z/6nWC2
      fmQCvE0c3SZVFBHp2qRmcnnGJ6bJ7CfIHD7NTaaSSJKE1ji0SV1eIzIwyH5yj2J2n5YmgmhC
      a5TINVSq2cyjsW0uH0rpAMXkptlQGAh7ujapzgDNYhLB4cXlcJDcWqHREd9IbdDTpGr1sNp/
      iYbFxdLAtfMO55XmI2xS9cc2qRtbDIyOYzVLSM/YpNZpdTRiOymiY8MYhzapTpuF6ICP99cP
      iITcIFm5dOUyIaeFQP8AlUoFgGpuj2zLxJWFWYIeC5knbFILqp2rF2Zo1h7bpL6J2qCniadR
      4PPLv8588jaf3fzKeYfzSvMRNqka8ViM2bl5zLTZSe4THR9HPtwKNjg4iGQo7O7nmJqYQFRb
      5Bsao5Egotbd8ugKRvAlyl2bVKCUO6AtuBgJmViNpVhwuxFlG4KSYWVtvWuTuhNjaGIas9HE
      KGZZXq4xNj5AfGMd7+DYY5vUz37viSfgrLVB4cUbYk40/gti/z50YB0uP20kaB6bO5NYXlc+
      BoeYGO7+s7FJ7W2I6a0CPcmpFsFbWzEmJqLP+/WRGRiNkk7uECu3uTQ/zdbaAyo1hckLl3Ad
      JkWrVmRjO4mmwezUMMurcSwOF9EBP1s7SRRNYGY8Qmw3haqLXL44h6F22P2Rj5YP6fFiVFHm
      /tA7+OsZpoMewj/+r847pI+V5yZApVyhUc4T20shW12ojQKiZEKwuDHRZnJymgfLS4R9bvbT
      GfwDE6S3HiB5Qsi6xtxEhI39FrPRCL5QhHxlE7QGlZaJy5eGub+6y+WL3QQz29wsLHh4cPsm
      66sxpi5dJvngHrp1jIV5D++/dxOzy8f0pIXFe8uPtYIM/eOYozeaP574dv7D1S9j6TT4R7H/
      m7etQeOF14parYaB2N3sYrIxvzAP7RadTtfBRFEUqtUqkkkgd5BDsrq4PDeDhQ6bOwdEIkGg
      q/bWRUcQJETJhKE/4YJiqCzevEl4/KFNanelxzBU3r/5HiMz85gEg/T+PpIov1I2qa87sqYA
      BpKuIb6FJ5RnrwBam+XlNUwON81GAx5aox7ea0qyBFqra42qiTQaDUSLjCxImC0OBAHGJ8b4
      6tfvMz3TLbi2N1dJJBJ4/WEkrcjtW3mG5y6xtrbBzMwUmd11arqJfGafoeEw927dQTKZscZW
      aEs2cvv7iJqLSr19KMfYWwc9LT4V+xqhWhpvI4974O3bxHMmRXBqZ5264GZqpP+579E7LUr1
      Dn6v61jHKJdK2MoHxw3xEdqhTerHpQ16WhiGgWFwuEPvdBCsdkzhkbeqCH5uArTbbSyW4/Xp
      aIebTJ5sdWi1FGw2K4au02p3//8hhmFQLZcQTFacdivVcgmTzYnNIlMpFRHNNhxWM8ViEbPN
      idN+aJN6++Rr3LqhIwpno99wpq0QGGCc/tiizYnl3c+/NQnw3L9yeWmFCwvTbMV3GRx9aI2a
      xdc/gqApuFwuyuVy1w8gU2JiIkqrXqNSreBwevC67ZTLDTweF4mdGKl8jU9cv8LezgbposI7
      1y4+OlazUqBQaVFIrxEOBckrEs1SjPnpUYrVNgd768xdnKWpdFjbeMIm9Zf+h5PNWA9uj3yK
      3539Hj678f/xyfjvIYcG6Xv38+cd1sfGC1NF13TsNiv37z9ga3ODYGSQ3ViMRGIXgK14DN0Q
      MFNnZSPBnfe+gdnhJR7boJpNkmt09wsMj03iOhTCHRmfxGl9elug3RPA75DQRBuFYo2Z6XGC
      hzapHpsIFjsul5tmKffG2qSeF787+z0kfWP8x/nXZ3fdafJsAhgGuq6jY7ATj2FxuDCbRMw2
      Z9caVTi0RtVUdN0gtr2NJ+CHTofQwAghr5PhoIs7sRzDfS9+UPVwNalRSrOeKHH92iW8Noly
      XaGpGWjlFFsHNd65ehGto73RNqnnxWc2/yO+epbPbrydLRPP3gIZHdaW1xken8RqNEmkcwSD
      ocO+fYFQXxC0JusbWwT7+rEYbXKFBn19IWSxu4zmj4xgSt1/tBF+e3OVRr1BKp2jVc5SbzRI
      7afYTxcObVI7mETt0CZ1htj6Ou7wIJrSxkSb1dUNBgZ8JJMZLL7QY5vUqSsnnoCTeB985NiH
      FnxnM3b3vycd/Vsp8K1rv9D9YeoKku/kequvE2eyCpTcXscWGMHvsj73PcbhtkexZ5N6LHqt
      EM9yqkVwIpFkaGjwWIEMjj1tjVrM7pMut5mdHGV7c51qvcXQxCy+Q+9gpVllfdTHGoYAACAA
      SURBVGsHQbJ0VSGW1rB5ggz3ubo2qbKV6ICf2G4K0WRjbjratUn9yS8dK76nOUuj1IfnlrO7
      BiAIpF0DSIZGsNptTY/8019GkHqqE0fhubOUzWTxu6zE9lLY3UHURh5VA6srgIzCyMgom1ub
      eOwW9jM5+kenKCY2aYs2bGYTEyMhtg8aREfCyFYneq4IGESGo0Q6RVZ39/HNjwEgSOZHNqmr
      9+sMPbJJDT2ySZVmJpif93D79p3HNqkH2x/LJL3KbIVm+bnLfxXRMPg7X/mHDJT3PtxXqseH
      8sJrhdJRAJHUfpKOLjI3P0erWqFe7yo6VKpVFEVBknSSe2nK9Q4X5qbp1CvsJlK4/d3N3y7X
      w4ddIpV8ivsbaRZmRx8dR5ZlVu6+jy00ivhBm9TFW3gHR7EIBvH11dfeJvW0qZud6IKEKko0
      zY7zDue149lvk6awtbGOYbKQy+QwW63d+3RBQBC6F3NDbbO5uUmjrZPN5bFYLQhG94suCgIT
      E4OsxrL4D53gU3vb7O/vky3kuLO4gt/joFpvsLOzA0BmZ4WCYoJOi0i/jwf3lskrBuXYfarY
      0ZUWhXwWQ7YiaSqd3hnuEQup2/zFb/4cf+nr/5Lx7Np5h/Pa8WwRbBi0Wi3MFisCOm1FxXRo
      YiFJIpqmI2CgqDomWQJDR9UNZEkGukVZtXDAXr7N/FT3LN9uNdENkGQZXVUxAAmNXKXNQDiA
      pqkoSgcQsFotdJQ2omxGMHSUTvd1i8WM0m4jySZkU/cJsbx+88QToB+2QpwFhm4cSiOeQQ1g
      HG6I+ZBWCPuN7ziR+sTbVASfySpQuVjA6fEhnaGOeblUwpxcPfE4unaYAGfxHX2JBJDcfszD
      0x/5vof0VoGe5VRXgRbvLHLx4jz5fAmPPwB6h0atht3tBV3DYrHQarUQDI1yrUkwGKCjKLRb
      LSw2B5Jo0GopWK0W9uIb7OWqfPqdK2yurtBo1XH4o0yMdNulH2qD1qpVpqLDbOxlEYCFqWG2
      9w4olWpcvjzNzm6KYqXOZz75btcm9Z/9jRNP2nmgijK/vfAl2iYrf+b+r2DrNLBd/zZCf/Nn
      zju0t47npophgNJqoXTaLK+usfzgHk1FYX09RizWdXhcXl2h2WjQqmXZiB/wzT/4PXLVBssr
      y7SKB+yku5veh8en8DqtgEgwGKDd1nAcGu3BoU3q5BiiJJNK5bh64yrBQ5vU6YkRZJOM0+3F
      LoP5DbBJjQVn+Or89/JHU5/n3lBvV9t58pwEMDAwSKcS1BpNms2uNepAJIz8gc0oe3s7tDsq
      zVqd0OAo0aEI/W4rd+M5RgcDHxjWwBMIMzsdJXuw/+jldr3I7XvrXLtxA6f5SZvUPHeWYk/Z
      pFr19ittkHEUwpUkweoB7kaR4ULsvMN5q3nuhphgZBg7TWqFKl6v99AaVcDjdYPWYGl5GavD
      i11o0+ioeL0uzFK3FaJ/ZJzNby5iOVSP2N5cpVQqkTpIU8znMAyd/sER3r99j+vXLlEtFTBZ
      ujap0clJ1pbvYXP7aRSLWKzyB2xSvVhFAQVOx1L0LJ+DPQcf8BN/8jMYCJiNNrj9iHbnR/67
      HqfPmRTBifgaknuASOD5m116Nqkno1cEP8upFsHZbI5QKHisQIaetEYFmvUKuXKD4YF+MAy2
      NjYYmZzCbOpOgtZpsx3fRrA4GRsOE9vYwO4LH9qkxhGtboZCbmLbu1idPkaH+kHTyP5Pf+dY
      8T3JmTbDPWdDjPPbvx/bhU9hGAbFtobDJGKReg/4zoPn9wLtJXCYBWJ7KbzBAbRGnnpTwR2M
      IBsK/f0R9hJ7WCXYzxYYmZihnk1SaKh4XU6GBvwk0jWGB0LU6g0KhRzDA/1U8inWt/aITExi
      OvzadToKkZEoO2uLrFcLeIYnyWwu43JMMzg6wdrdRdT+ABOHNqlDg/0Yhk5z8Q8+tok6TWxX
      vgWA30tV+PmlNFG3lX/0zhDmXhJ87Lx4xkURURTZ3olTa6nMzc9RyeUoFrsuLdlcDlEUkcQO
      8ViK7d195uemKeYypJNJTIf3taG+fkySiKGrxJNFxgafvrJYbA4OdtbR7aGuTarH9sgmNRVf
      xezrw242dW1SlVfbJvVl2Ci1UHSDeLVFU337FBleBT6kFaLN8v17yHYXmf0UHR1MsowkywgC
      yJKEpKuHqhACyUQCQZSRRYFQOIwkCMzOjHNv64C+Qy/gh6oQ+9kS8wtzyJKMgMH6+gYAme0V
      dnINBE1haCTM4q07lHSZcuw+qbICnTa5XJqWJmGW4E3ZD/PlmRB//9ogP/OpUdzm07+X7/HR
      nEkRfLC7SdVwMDX6fJkNvdOiWO8QOIEqhLWYPG6Ij+M4hyfBcnAAyeU70di9IvhZTrUIVtoK
      ZsvxHFiCA6OEn+hHNwyddruD1WqhUavQbHdwur0EvNbD3xvUqxWQLThsFmrVMiarE6tZolou
      I5qt2C0myuUyZqsDu80ChoGyc/JWiJP6BL94bKP70E4QcH72e0/NIrXH6fHcBFhaWubiQ1WI
      sShGp0Uhm8HfP4Kgt3E6XZQrla4qRLrE5OQ4rXq9qwrhcONx26mUm7g9ThLbMZKFGp+8foXV
      lVUGhkfQn7jwNCsFMqUGpXSScDhErinQqmwxPz1KvtwknVxl7uIs1UaTvbUN3n2oCvGL/93H
      MkmnwdcHPsFXcxpfmvDzifDxrno9Tp8XXis0TcPhsHH//gM219cI9A+ws7XF3t6hKkRsC10H
      q9hgeT3B7W/8CbLNTSy2QS2XJFvvbnofHp/EfagKYTaLZA5S1JqPpRHtngBBlxlVslLIV5md
      jT5ShfA5TWCx4XK5aVcKaLyeqhC/splnq9Li12Kvp83rm8oLVSF243FkqwNZEjHbnTjtFiSx
      qwqhaxq6DvHtbZweT1cVYnCEPp+LoYCL27E8w+EPPKjSNSZnL7MwHyW5m0RVux4CjXKa9d0C
      169dxmOXqNQ7h6oQ+2ymKty4egld1YnOLOAzvZ6qEN814iVgkfnOoZM/vOtxejx7C6R3WFtZ
      Y2hsoqsKkckRCAZxHqpCBEMBBK3J2sYmgVAYi9EiX2wQCvUhH7ZCBAZGMO3ff7Su/UgVIlug
      VSnQUDSmJ0ZZvL/CjasXabcUZFFnbW2Dyeg0W+uruPoGUJU2JkFhbXWDSMRHKpXB7A0+UoUw
      T1x8JvyX5SwNMrpbE7u7iL40GeI/uWA/m+P0ODZnpgphDYwQeKEqhH6obXm8hz+9VojeKtAH
      OdVVoGQiyeApqUKUcgeky21mJkbJHyTYz5cYGZ/Bbe+uiijNKhtbOwiylZnJYVaWV7F5QgyH
      nF1VCJONaMTH1m4K0WxnbmocQ1PZ/4fff6z4nuQ0rgDu7/5hHJ/5c8+ODWyVWww6LThMvXX+
      V5HnJkAmk8X3UBXCE0Sr5+loYHUHkY32oSrEFh67+ZEqRCkZoyVYsJtNREf72N6vEx0JI5rt
      qEoBjA6xnX1Gxsdx2h4fWpDMzC4ssH7vFiv3awzMXWR/5R5Kf4C5hQXu3bqFOB19QhViHAyD
      TnLrY5mkj0KrlT/09V+JFfjVrQIjTjM//emxRz5pPV4dXnit6EoXiqRSSZSHqhCV8hOqEJWn
      VCFK1RYX5qZp1yvs7aVw+7qqEO6HJttai3pTx+jUWVp73AcvyzJr925jCYwgCuCwSFgkAUMy
      sXz3fTyRkUNViBUU7WykzM+CYqurjVpWtKeWfXu8OjybALpCfGsTQ7aQzWSx2m0fogqhEItt
      dVUh8nlsNmtXFcLtRhQEJqODrMQy+A+Frw6Su6TTaXJVA69LoNZoYDZZ2N3pLqd2VSHMSHqn
      qwrxYJWCYlCO3aOKA1HrUMhnEcwOTIaK8pp8mX5wKsAPTwf5yWuDvW7PV5QPVYVoNBpYbHYE
      ulr+ZpMJBAFZEtFUHdBpd7RuL/8TqhACXQeZWjHDTrbBwvQYAM1GHU03MJktmCSBVruDRTY4
      KDQY7A+iqR2arTaCIGKz21BaLSSTGRH98es2C61m93Wz2dRVhVj9xoknQNcP/QFOcFkxj85h
      iow983qvCP7wsV+lIvhMVoGKhTxur//MVSEs+xsnHkfXdYSzcog5bIU4O4cYA8voDJLTe6pj
      v00J8AJViLtcujhPoVTG7fVhaCrNRh2b04NgaJjNZtrtNoKhUam38Pt9qJ0O7XYLm8OFJBq0
      2x0sFjN78Q0S+RqfurrA6vom9cI+Yt88V6e6zXKPVCFqh6oQu1kEQWBhcojtvQPK5RqXLnVV
      IUqVOp8+VIXI/PRfPfmsvaYokonfWfgStk+7+MHrbqxy7xbrOLxAFcKg3WrSajVZXl1n+cEi
      9UaT9fUttra6Z96llWUa9TqNSobN7QO+8ftfI1Ossby0RKt0QHy/BHRVITwOC0hmZmfnkO0+
      Lkw89g+zewLMTo0jChKpZI4rN64SMIPgCjIzOYooSTgOVSFMb4AqxGmwHr7I7859D79RlHg/
      WzvvcF5bPlIVolKrU280MNvdDA72P6MKkdjbodFu06h2VSEmRgYIeyzci+UYHXx2S2W7XkC0
      +Z5aElQaJW4trnL1nXdwmgWUjo6qg94o8P6DTW68ex3xUBXC8gaoQpwGkfIevnqOgEVi7AUP
      HHu8mOeqQgT6h3AITWqFGl6P55EqhNvzhCqE3YNNaNNUVTweJ2a52woRGRln85t3sZqeUIUo
      lkilCwhKlcmJUQxN4fa9Va5fvUSlkMdkNbO5sUF0YoK1pXtY3X4ahTxWq4nNJ1QhZKfnsSqE
      4+3tqwmh8JN/+N8S+NH/Bq9z8rzDeW05Q1WICJGA+7nv0bUOHV3A0lOFOBa9VaBnOdVVoFwu
      RzB4PFWID9JqVMmVGwxFwmT398iVW0xMTmA+LNy0Tpvt7W1Ei4vRoT7im5vYfWH6vHa243FE
      m4ehkJut+A42l5+RwTCVYhHl/zz5foCzbIbrjg0nWWOtWd2Y1RZmVfng6Hh/4L/AFDpeu8qL
      eJsS4Ll/5d5uArvpUBUiNIBWL1BvtvEEI0iHqhCJRAKLZLCfLTA6OUs9lyJfU/C6XQxF/CTT
      NYYGglSqNXK5PEMRH7vJAhdnw6ysp7g8PwRAR1HoHx5nd+0uG9U8rsEJ0psrOG1TREYnWL+7
      SF/40iNViMGBcFcV4vbXTj5rrzD3B67zS5/8Mn3VFH/ja/8Uq9p66veeP/9XzimyN4cXpoog
      SkiiyPZ2nFqrw9z8HOUnVCEyuSySJCGJHWKxJLF4oqsKkU2TTiaQ7N32375wpHu2NyT0TpXF
      +5uEwo/3xFrsTrK7m2i2IKqiEfDacZklDKuLg+01TN4QjkNViNobpArxUewEJlFMVvY9w9Qt
      vV1kZ8GHtEKoVCslVER2tncI9UeQxadbIXRNpVTI0Wzr7CT26Q8HEXSDQCiEJAhMjPZxdytD
      n6crgNtuNWm32yjNKqrkYmY6SmY/RSaTAaC4v0XZcDAxHCEccLCzl6aoaDST6zRkH9Hhfiql
      IqGhKF6TQes13BBzHL5l47f57Mbv8KXbv4i/nj3vcN5IPqQVQmN3N0F4YAjJUNjPlvD7PAiC
      gN1mpdloIRgdcpUWXrcDQVOotjXcDicCBja7Da1d4/5GkisXugpxqb1tWh0dlzeATdLIV1sM
      9XmJJwtMjg/RqldIpXMIoszw8BCFzD42TxBZb7GfySMIMoNDYQ5S+zg8AfxeF5ViEX7/3514
      AvTDGuBMngSf4dgG4PzWLyF7T6dOe5K3qQY4k1Wg/cQu/v6hR+K4Z0G5XMKhtU88zlk6xOi6
      3k2AI37YktuHIB9NiaO3CvQsp1oEr6ysMjc3e6xAIkMjT/28F98gU1W4fnGGe3fuonQ6TF68
      jvdwQ8zDVoh2W2FmaoSVjT1MFitTwyHiewc0Wh0WZkaJ76ZotFXeuXYZQ1VJ/b0/c6z4XhV0
      QeS9sW/BEATejf8+Az/5r0/F/LvH0XluArSaLRrlPLG9FIZkRW0UsFjtaKIdmRZzcwvcWbzD
      UDjIfvoAV2ic1PoijvAwervFxakI6wcdFiYHGRqbpLq6Au0qitnL1QUfiyvbXL8yBYDN7Wdh
      3s2d928T29zjwrUrJO7fRXAFmJ9zcevmXawuH/3BJrFE5o1xAV0NX+SX3/nLALhaZQbOOZ63
      kee2QgCUikUMRMqVMma7m/mFeWRdfepdhUIBySRSypdwByJcnpvBZxVZ2c4yOhwGnuiGtHoZ
      9IhsxveQTI9ForROg5s3bzN54Qo2k4hhdMc2lAY3b91l7tJlJMBktiAb2hvjEulplTCrbcxa
      G0+zeN7hvJU8txXC4QsAbRAEHHY7NqsVELDarKDVWVpeBskKKAiiCbvZglnq6oeOTET52h8v
      cvFCd/jtzVXS6TRefz/tVotGQ2f2wiD3Hyxz8cI8+dQuuslKcneH0bEhVu4sYrY7KCfiSFYb
      iZ0d+vpcHBwUEGQL8hvSDTdY2uHHf/vHAAF/I3fe4byVnE0rRGwV1RZiLBJ47nv0Tpt6x8Bl
      P14jV7lcxnkK9Z+uaYiSyFloI3aLYLrSi0dAtDkQpKMVn70i+FlOtQiuVqtPOLy/HEPRp4vn
      Zq1EMl1kbHyMTqNMuthkdKgf16FBhmEYHCR2EGxewgEP+4kd7L4wXqeV1O42ksNHyONgZ2cb
      py9MyO8GXaPyO790rPiexDD0I39BX37sF7dCOD71hZeyRu1x+jw3ATY3tpifibK1kyA8OILW
      qlApVfCGhxB1Bb/fTzabxSRoJDNFopOTNMoFStUGbpebUMBNtlAnFPSSL1YZCLm4v7yC2mgQ
      HfSwkSgwPdy9QjQrBWRngHR8mWbBje4Kk1p+wNT0OBZPiJ2VJWwX5wkNDLN8/y6+G+9i6DrV
      3/rFj22iTouco4//7XM/hklr8w/yefqGzzuit5uPaIUQEdFZWl7hIJ1hJBolnUiQTncdHveS
      CURRRFfKrG4kWbq/RF9kgERil2I6QcPoDt/fF2B5dZPRgQAmm5/A4AiNXPrRcWxuP0Y9hyK7
      qdXbDEX8+GwygjOAWs2A3YPL4eBge51GR3wttUEfstk3R9ozQMI/zp4/et7hvPV8iDaojqp2
      0AyDrfUNBscmsFtNSCYLZpOEKAjouo7SaqB0dDbie0xMRpF0jVD/AC6bhWjEx/ubWQYPTfLu
      LN7lwtV38Pv8aEqFWj6NxRukWq0CUM0nOKiJXL04R9BtJluoU1V0OrkdMi0z1y7N0qo3GJ26
      QMgmvpbaoA+5kLzN5b1v8k78D4lmTy7v3uNkPHsLZGhsbWwyPTuHyWixm0wxMjyC2SQBIgOD
      /Qh6m51kmuj4GLLe5iDfZHioD1HobohxBcJ4U5VuDxEGbqedrfVVgpFhJsciJIsNpkacrGwm
      uTjvQhAtCGqWlbV1JienSW5vMTA+iWy0ENo5lpcbjI71s7Wxhrt/GLskUBFF7J/8wokn4Gzb
      oQ/v/p8Y3g78dX0dRLB7P3kmx+1xdM5kFSi1s4WrbwSX7ewMIXobYnqrQB/kVFeBYrE40ej4
      sQIZGJ146uf4xgq1pkJwYByhlSdfM1iYfXz/26qV2NxOoBkCM5MjrKxuYXF6GO/3srWTpKOL
      TI/1E9tNoSFxaWEWQ+2w91c+faz4nuIsjbIfnlqOMH7KM0Jp5lP86f/0b/XcIj9GnpsA5VL5
      USuEyeZGbRQQRBnJ6kGmzcTEFMsrK4S8TvbTGQKDk2RiSwiuACYMZqP9bKaazEQjDI9P0a7m
      iaXzTI2FKVZ2nzqWyepkfmGBpdvvsb6yycTFyySX7qJZh1lYmOf2N29ics0xN+Pg/Tt3H7VC
      GMrJm+FeBWoWF//rZ/4udYubxk6R74s+//lJj9PlhaeaeqOOgUg2lwXZyvzCPHqriaJ0t+e1
      2i3qtTqSSSC7nwWTg8tzM5j0Nls7+4Qj3VbdTHKb9WSJCzPjWK2WZ44jCDp3b71HcGwWsyRi
      ksVu/WDo3L75HoNTc5gFg73tOKJoRjuDiThXDBCeY6rd42x5rk2qZHNSr9a6kohyd2cYgCiJ
      iHqHpeVl2qpAtVZFEEUkScJutyMIMD4xSjyRx2M1AQZLyyuYBZVMsURsfY29vT32swXW1zcB
      yGyvUVZlitk0kcE+7t66Q0mTKMaWaApWCukDcrk09baGrqkYvL6rQB+GU6nyN3/3n/DX4r/O
      nx09mXtkj5fjTIrg9N4WZd3O9AttUpsUah2CvucrR7yIcqmENb933BAfx6FphzapZ9UKcfT9
      AILFhnnoaBInvSL4WU7XJlVRMJuPZ5PqDw/T90S3p6q0qTXbuN0utE6belPB43YR9HW3TBqG
      QaNWRZAt2KxmGrUqstWOxSRRr1YRTBZsZplqtYrJYsdmNQOn4w9wFHFcy/RVTP2jLz32Wa4C
      9Tgdnm+T+mCZiwszbG3vMjQaxVC7Nqm+/mEETcHpdFJ5aJOaKTMxMUar0aB6aJPqNktUKk3c
      bid7uztIkkgincUu6siyTipdZn662wfQrBQ4KNQoZfeJ9PeRqeu0q2Xmp0fJlhpkkinmL81S
      rNRIJtf4xLvvYmgahV/4Jx/LJPl+5L/m/204eT9T54dmgsz5el5fbwovPDWpmorTYeP+gwds
      rK3g6+tne3OLvb0dADZjW2gPbVI3krz/J3+MaHGxtbVBLZskU+taoY6Oj1OtlPH7goyNjVIp
      lvEH/Y+OY/cE6PPa0EQruVyFudnJRzapQbcF4dAmVa0X0ZE/dlWIlqrzK5t5VktNfnOn9PEe
      vMeZ8qE2qYahY2Cwt72NYLIiiQJmuwuXw4osdjes6LqGcWiTanO5QFHoGxwl7HcxFHBw5wmb
      1Ht3bjMQnWcg5ObundsMT1+i3+9A07rrOc1yhtWdHNevXcZrk6g2D21SK/usJ0rcuHYJXdMZ
      n17Aew42qRZJ5E8PeghYZD4X6cmTvEl8qE3qysoaA6NRbDRJpP//9s7st630OuC/e7lTJMWd
      EjdRGyXK2pxZ2mbaYtK0CQoUAdqHIkWBAn1o+hh0SYGgQJ/7B7RB37oALRDkpQUaIAGSTqZA
      g0lnxrYkW7so7hJFUeJyycv99oG0JM9YthZrZFf8vdkSDo+O/eHq++75zu8Iu8PR69vvalJp
      y6xvbGFzutEpNY4KMk6XC434VJM6giqz3LOiKIiiQCYRpTE0hCBoSMV2qLvdJFL7vH1/jlqt
      hkZU2NjcYmI8zPbmOiaXl1atjlZsdjWpQ1Yyezk0VsepJnV05toFUJSX73/VFhvfuufhW/c8
      1/68Pq8XN6dJtQdwWAznfo+idOgonByvXpZ+K0T/FOizvNJToEw6g9d3tWvan9WkJne3KEoy
      3tAEx5kYlXqL0cnISa9QU5bYisZBrWdq3M/a6gZGqxO/y8xWNI6gMTI6bGMnkUalHWB6ItTV
      pP7NN6+U31ku8gS4enDOOV0SyFgDWOQCpnoJAPef/x2qG5jx0+fFnLsAstkDrCYd0WSGgUEX
      rWqeZkvBYHGipkEgEGQnGsVi0LB3cMhwKEwhHUVGy4BOy1jQRWyvwmjQg2s4gLstsx5LMReZ
      plJIkUjmuBfuLTBRTTgyw9bKJ6w9LjM8Ncve+gp1t51IZIblTz9FnAwxE7H0NKmhriY1eX1F
      0m3w0ej7fD/yx1irR3znx9/F2KygtJu3ndad5MWa1FZXk5rOpGi0BSIzEeRSEUnq9vEXS0Wa
      zSYqVYdUYp+josxsJExNKpJMZTD1NKlyMc/SepzI1ASlowPWttJYbQMnn6PWaNh6/BCtPYAI
      mPRqDCoB1FrWlh9gGQqiE3jjNKnnUTA6QBCo6kw01J9vDenzxfHcTXA8nkRRa8llcxgGzJSq
      tc9pUmO7Uar1DgeHeQZtAzTLYBl8qkn18sEvtvhaKAwoPFhaZnL6HlWpxGGxgtvlpFQ4pi2X
      CAYD5BLrHDd1BIQONo+VJ082aDUU9NEVJNGEhTZH+Ryi3oymkH1jNKnn8ZWNH6JvVhkqpbDK
      R7edzp3mObNBO0iVKgajEUHpUK010Om0CIBaraLVanf1qY1TTWqzo6BVd/t+1Go1lWKOWFbi
      XngUUKhIEu2Ogk5vQGk3abXBoIW9fAX/sIt2s0FFriEIIgOmAepyFZVWj6i0qfb+3jhgQK5U
      Uev06J5qUld/fu0CXLZd4aZiG976DUTd+YcGz4vd3wQ/y2szG/Qon8Nic/ZuhN0MxUIBXTb6
      8m98Cd3ZoAI3cSlA6XR6T87rx1a7fKjtp8ew/QXweV7pKdDSoyXm5mYoFMqYBwdROi1q1Sr6
      AQuc1aTSQarWsVoHaTWbNBp1BkyDqM9oUrfXVpAbLXSDbsZ9dv7zP37Mb/3uNzD2Ln48nQ1a
      kSQmxwNsxQ8QRJGZcV9Xk1qqsDA3SSyRoViu8iu/9E5Xk/q3f3L9qr0hWH//21h++49QFIWf
      75d5kKvwjZCNEcurXwB3iXOXSqejUJerVOUKqxtbPFl5RFGS2PisJlWSkAr77MSzfPThB+zn
      Szx58oRaIXuiSR2fnsVs0KDRaNnd3sE/8uzwXOOgg0h4DEEQSCdzLLx9H7tGQTA7mZ4MIYoi
      xhNNqu5Oa1KbHYV/eJLlZ5kSP9jJ33Y6bzwv1KQe7GUolMpIkoTWaCHg9z5XkyrJMlJJwuUb
      YWLEh8eiY3n3VJO6vvwAjdVH0KEjnjkkl02T2T8dBdioFvj44Sr333kXk06g0TrVpH6yvMnb
      75xqUrWtu61JVYsCs3YjWlHgnr3flHddzp0Navf4MAoy5eMKVqsVy1NNqsV8oknVGS0YhQZy
      q4V10IRW1dOkjoyy/dFTTapCuVKhk8ugVgf46lffJx2P4/QM8uDhMl+6P0/p6BCNXtfTpI6x
      /ngZvcVGNZ9Hp9eyvXmqSVWZBtH1NKmCwfSFFus2EdTdl4aiIPAXi14qzRYDfTv8tbkxTapo
      HsbrfIkmtS2g0/Y1qVehvwn+PK90E5w/zONwXu1ytn906pk/Hx1k2M+XxxG0PAAACztJREFU
      CI1NcLwfpyDV8IcmGBzovgRqtxrEYzEEnZkRn4vd7W0G7EO4eppUlWEQn9NMNJZAb7YT9Lqh
      3Sb39391pfzOctW5QE2VloZax0BdwvSrv4Nh4deunUufL55zF0AikcSgFYgm0tjcPtqVPFK1
      zqDLi1pp4PEMkUqn0Ykd9nNHBCemqeb3OJTq2Cxm/EN2UgcS/mEnikrL5KiXlY1tNEKTubm5
      Zz6rWa/h9oVIbi6xVcpj8o6xv7OGcXqCocAoW8tLuFxzjE6EWXn0AN+wu6tJ/eSnN16g51FX
      6fjeV/6arMXHH370PX5tP4Fh4VZS6XNNXjobVCWq2N2NUpZ7mtRcjqOj7unDQe4AlUqN2NOk
      7kSTRKbCHB1kyWZSqPTdTZpBI/JgaY3w1ARmg4blRx8TTZ1ugnVGM4epHVp6B61GC6fNiFkn
      gt7CQWIL9aATo05L4jXRpEp6C2nrCHWNgZhz8naT6XMtnqtJlcolWgjEd2O4vc/XpJYK+Z4m
      NcPwkOtEk6oWBcaDbh5t53BbDYDC8soqs/Pz6MUWaoOVgNeNLNfI5brqz+O9KCXFRDjkw+0w
      kkjlKNQ7J5rUyZCXcqGAJzDxWmhS7ZUcv/fwX/jy9k/49c0f3Woufa7HczWp8VgCjz+IulMn
      fXCMw25DFMBoNFCt1hCVJrlCFdugCaHdoFRvM2gyAx2MRmNPk5picXYaUEjGdqi3wOYaQtOR
      KVTb+FwWouk8k6MBZKlIej+HoFIzEgySz6YxDLpQd2pdfaqgJhAcJpNKY7K6cNjMlI6PUD74
      /rUL0PUDXO9NsGH+y+gmPv87UH8T/PzYr9Mm+IY0qXFsQwH0N6pJLWJSrt9C3O50x6K8apuv
      YBhAUWv7C+A5sV+nBXDuT7m+ts70lTWpz44Q2V5/jNxoYXH66VRyVOptgmNhLMbu2JVqKc9O
      fI96o8n0ZIDVzSRavYGJgJPdxD5yvcVMOMhuIoPcaPP2/XmUVpP0X379Svm9SlZ8b5EfcPPe
      zk/QnOnpt37zzxj4zT+4xcz6XIRzF4B8VpOqNtCq5M9oUutEIjM8XHqE3+1gL5vF7Aqxt7WE
      0e1HqdeYnfT2NKlexqfucZiJcSQXyaZyONxO1GcGwBrMXU3qowcP2NlKcu9Li6RXlhBMDmYi
      Fj79+BF6sw2vu852fO+10aTmTEP885e/TVtQoQgiX9n44W2n1OeSvFiTWuhpUouFz2hSu19X
      FIXj42NUGoFCvoDZ7mEhMsWgXmQ9niMYcAOwu/mEo7qacGgY3YCNqXCI9bVTOUSnKfPJxw8Y
      m1nAoBFPMlCaVT7+5BFT8/OoAFFUoUZ5bTSp+mYVY0NCQMHWtzy+kZzbCmG0OlCU7kUYo8GA
      /qkmVa+DdrurSRV1dJQGgqjGoNWh62lSR8ZH+eB/lpi9pwYU0pk97G6Bg+IgDjOsrm7gGR7h
      8eM1ZmcjHGZitNV6MskEIyE/qw+6mtRCchdRbyAdT9DsaVJRa14bTaq5XuI7P/ouFZ2JoVL6
      ttPpcwVuTpOqdxLynn/Ju9OsU2l0MA9c/BLIWYrFIibh+nOi2+02okr1ym8DCHojikrT3wQ/
      J/YbsQmWJAmT6WrNZp/XpBbJ5AqMBIaJx+K0OwpOjxf7YDe+oihkM0lEvQWXfZBsJonB6mZw
      QMdeKoHKaMVpMZJMJhiwunHazNBpU/7pv10pv7N0FAXxkv8YuvB9DPPvvfT7ng7+6vP6cu4C
      2NrcZmZ6jGgshds3QqdeplgoYOtpUm02O7nDQzS0yBwUGJ2YQC51NalmswWX3czhUQWn00r+
      uIjHbmRlfZfZ8Cj51BYFuY2918sml44QDVaysTUqR4O0jU5ST1YIh0fRDNiJb6yin4tgcw+z
      /mQFa0+TWvrhP35RdTohaQvxT5p3GGmk+M59b2/4V583lRe3QggiAh2erK6yt7dPIDTKfjLF
      /n5Pk5pKIqpUtOvHrG+neLz8GKdnmFQyTiGbptLpaVI9LtY3dggGg6g1ajKFBqOe005Rg8WO
      IB/RUJuRpBoBnxObQQ0mB53qIRgtmAdMHCS2b12T+tj3Nkc6K0uHFfar/VEmbzoX0qQO6DWo
      tDp0WvWpJrUu02gqbEXjjIfHUbW7mlSLUcfokJVPdw7wOnua1IcPmb3/Dg6LgVIuhdnpQxAE
      JEkCQMqnyZThS3MzOM1aDo8rlBsKzcME2aqat+Yj1KoyI+Hb16S+u/shETnN14NW/KarjY/v
      8/pwjiZ1i8mpabRKjUQqjd8fONGkDnuHEJU6seQ+o6Fuu8T+YRW/z4Uodv9jWpzDWPZKaHqa
      VPMZTapWZWQs4KDTrBKNZ5i/FwZRg9gqnmhSU7s7DIfGUSsyQiPP6uomwZEh4pvrmIf8XU2q
      IGJ892vXLkC3HRou2gphBL7rkRmY6c8J/f/AzcwG7WlSLX1Nav8U6DmxX6d6nywASZLeqFOL
      aqWCNR+7dpxOpzu9Whe+f6m5PBeL3b0i2l8Ap7R7SqqbmsMEl6v3yU951SPP28Tgvb4n+CYH
      Y8HNWR9v0ib5psa+SvybWeZvEDfp77rJ2De5aG/iqfKU163e/UPsPneaO/cEqJXzLK3tYnO4
      CLhNrG4l0RlNTPptrGwm0RlMzEUupio9RSGbTpDMSby9eI/Y1ioFSWZ4ZBo5n6AgVRkamaKW
      T1GUKrhHwgzbL65aOtxPsZM+4t235tlZf0y9LeAc8tMsZckXJRzeMYRKjsNiGfvwKAHPBV3D
      nRabG5vU6jVcgQlK+7tU6m0mpmfZ212nWm8yOjXHQXyditwgFFnAZrzgwYbSYWdrg6pcx+oJ
      Us7FUEQd3uAoR+ko5WoN/8Qsxb0dyhUZ38QsLov+wjWJ72xQqshYnH6USo6CVO3W+yhBodyt
      d/0oRaFcwR0MM+x4fr3v3BOgUjqmqYiYLRbi0SSRhQVUNYnHW0nmFxcQaxKNK8R1eHwYtd1y
      HlfqLC7eJ5PY5LjSYGFxkb3EFgWpwfziPNlE7FKxbc6hE5lIsVBEENWYTQZyxSrzC4vkMjFy
      hQrzCwvk9xIXDyyomJiaZthhpnh8RE3QMz8VYjcep9ZWMReZJJncplpXs7AwQ2LnMrNYBUYn
      pvB7bJQrVYqFIiqNjgGDhlKtzcLiAqndVcpVhYXFedK7l1Pe+gIh7IMm5FqN40rttN7Sab2P
      yw3mFxfIJmPnxrlzTwCHb4L3vAorDz+m3dEiit27zh2lO3Sq++bisgjPnJoIgtDTzigIPP1d
      vYMgqBEQL/0JqjOx3/rl92g3azxcWT25qw1K7639JbMXBHY3Vmhp7UwEbKxGMwiigKI8dScL
      oHTzRhBB6VwqdmpnjbJiJDLhQxz3U5eOebKx3a2BIPbyFhAuG5vuKJ1GW0Fpt15S7xfX5Ebe
      A3wRXPU9QCG3Ryqbp95SCI+4WY9m0OqNTPmtLG9n0OqMLMxOXa47VFFIxrbZjCYJR2apF7NI
      tTpu/xTVwxhSrY7LP4WcjyPJdVz+CXyui+eeSURZ24oxFo5ArYAkN7p3phtFihUZqycElSzH
      ZRmrJ/jCLtxn0m5V+a8Pf8HQkBuPL0g2vkWt2WFsepZMdJV6s01oap796BPqjRbB6UUcF3z7
      rXSafPiz/8blGcI55KewH6Pe7GD3hqgcxKnWG3jH5ihkNpFrDYbH7+GxXnzU4+bqMo2OgN7k
      ADnfq3eY6kmNw9TyCcpyHad/Av859b5zC6BPn7PcuT1Anz5n6S+APnea/gLoc6fpL4A+d5o7
      dwzap8/j//0Z//qDf8fkHOsvgD53j9l33+f92AbTX//T/q9Afe42/QXQ505idXjQqfovwvrc
      cfpPgD53mv8DbQSXGc2YgTsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='RF Reg Model Line' width='192'>
      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
      PJi/Sz6/w4OljW6I9/G5MLqiAHUXpqZmqFcvvoqjj89F0p01gOdSq5URpOcnCavPy0lX7ACN
      WpmVjRRTl6fRFMm3A/j0LC0FcBynaz4upVKJvr7u57308emUli+QZVldU4BGo4FlWR1f57ru
      E3PnnHb+acg9zGJ90e3sltx2rukVuU+jrS0FCAQCX3jBeXEch2CwMzfidh6As3JWxXkchy+N
      i87x063+X2Tfuy33abS1ZwNizpJMq10u8kftVhu71f9uZaPrhtyn0daesQTbtv3EKZjneTSO
      BZe3Q6NuUS6XqTfs1rFqqUTj+H0O5J42+/NcF6verNxuN+rYjvuF33VdB7tDl+lTp4gd9t+y
      aniA69hY9SdfZzcazTynbeJ53qn9cx37ib/R4+W6J+V6LsVSuXWucex/bJe6ZT3xv+0ZBbi/
      MI/j2KwuL1IoVjDLJbbWVyhVmg9dfifJL2/9piOZDxfukc/nqVkNCtk0mdwee8kUyxur7JWa
      0WpmMc9nv/yMxin/lV3e4cNPbuJ6Hguz/8u9xTS59DYb2xncRo1CoUChaOI5NksP5lhaTbXd
      Tteu8fOP/pP9moNZKrK6sky1blM2y2TSaVwPCrsZPrt5q22ZH334b1QbLhuL9/l87j5mMc/i
      8iqNeo1yxcKqmFi2Q6Na5tYvPqVQb1s0Tr3Cg6UVzLKJXa9SqdbYze2wur7djP9wGjy8f4fV
      jVz7QgHbyrO4mKJsmjRqFaqWRTK5A0Aht8Ps/P2O5Hmew69+/jGZ/SqmaeJ6HqViCde2WFxc
      ZL9c6R0FgOZbVpQk5mZnWVtZJJwYZWNtGYDY0BjxgdApEn5bnoNpmlhmgY2syX5qnarr0B8Z
      YnXxAS4QDMe4NJw4VRbAUCRIbq+IrBoINJMBp1bukctluHlvjVDQQJBkpmdmkDuYveztpLn+
      9ldJbW2xubJKYnSUhw8eMj97G0fSEYBIfJih2MCpsg4ZHxsmnc5SdUX6VAnHcbHNXRa3dlhZ
      XmZ9fQ0QUIwQM5NnS2O5ublFrZglldllcSONVCtRsl1ESWHmysyZH67NzU3Kuxmy+0chtdHE
      MEGtsxl7eTfD1OtfoZBJkkxu47geK6ur3L+/wPjUZbY313tDARzHwbFtcqlNUPswdBVJNegL
      6Iji2efBsh7i6tWrREI6mdQWVdsBVyRgaIhS512PDo2weu//iAxdAupsJfMkYmEatsf0lS+h
      nEEmQCq7SyGXpZDfRVJUFFlCkkT6IoOMJgY4y1JACUYwc2towabSrK1vMjiYAEQ0yaPuiajy
      2XbQ6jUTSdab08JaFRcIh8OokkwzV3jnuK5LrVxBNnRcz6NWrZ5R0hGpTJZifpfc7i4CHrZt
      Y1kNPEQkXBzXQ/rggw8+OOd9TsWyLDTti63CO8lNjPAgQ4k4uZ0doolBYpEBdF1HURR0XSeT
      3KBYrlB3BcJ97e0oHV4rqjpBVUBQgwyPxElvbDJyaZKArrKf3yFXKGJWLKKR8CNlkg4RBAlV
      DxAwDIYSMVTVQJXqoIWIxeIEDA1NkXBsi5WlNWpWlWA42sZD5qFoBhPj44QCGsV8jnypwtTl
      aQKGjn5QTjWX3ma/WKba8BjoP30kVBSFUDBINDFEQFfpD+oUKzaDiRhBTBrBEWIhnVp5j82d
      POVSmVg0cmrOIsssspHZY+byBIJjUbI8EvEEoYBBMBhA1TUE22J5eYOaZdIXibX1YqgUC6QK
      VaYnR3Etk6onk4jHDn4DjWx6i2LJRNICBPT2PAxERWNiYpxIyGAgEmFjc5t4YpDhWD8b20ls
      V/AjwnqNvXye/mi0a0Oz57msra0zNTX10qZnL+TSpLMFJqa/5CuAz8tNT6wBfHyeFb4C+LzU
      +Arg0zOszf+av/nbv+PfD+wth+wll1lYy3blnj3rCuHz8pHZXufr3/kB65/+M3dXxrjzXz+j
      bowwqWT4dEXgu3/4Ch//zx2+9b0/49pke7ab0/BHAJ+eQhAExseGKBQKjEy+xn4uybVr13nv
      j/6Ym7d+w7tffYOlhcULu5+vAD49g6aq/Ms//SO/WCpxdVjl9u071GyPyPAE9z7/hGuvznDz
      9jyJ4YsrMOhvg/q81PgjgM9Lzf8DgeYJvxN+PakAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='Reset Filters' width='132'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table RF Pred' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Dur' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Trips' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trips by Hour over 2023' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
